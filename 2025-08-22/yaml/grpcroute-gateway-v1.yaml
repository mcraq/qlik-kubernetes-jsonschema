description: |-
  GRPCRoute provides a way to route gRPC requests. This includes the capability
  to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
  Filters can be used to specify additional processing steps. Backends specify
  where matching requests will be routed.

  GRPCRoute falls under extended support within the Gateway API. Within the
  following specification, the word "MUST" indicates that an implementation
  supporting GRPCRoute must conform to the indicated requirement, but an
  implementation not supporting this route type need not follow the requirement
  unless explicitly indicated.

  Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
  accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
  ALPN. If the implementation does not support this, then it MUST set the
  "Accepted" condition to "False" for the affected listener with a reason of
  "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
  with an upgrade from HTTP/1.

  Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
  support HTTP/2 over cleartext TCP (h2c,
  https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
  upgrade from HTTP/1.1, i.e. with prior knowledge
  (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
  does not support this, then it MUST set the "Accepted" condition to "False"
  for the affected listener with a reason of "UnsupportedProtocol".
  Implementations MAY also accept HTTP/2 connections with an upgrade from
  HTTP/1, i.e. without prior knowledge.
type: object
properties:
  apiVersion:
    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
    type:
      - string
      - "null"
    enum:
      - gateway.networking.k8s.io/v1
  kind:
    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
    type:
      - string
      - "null"
    enum:
      - GRPCRoute
  metadata:
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    type:
      - object
      - "null"
    properties:
      annotations:
        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations'
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - string
            - "null"
      creationTimestamp:
        description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
        type:
          - string
          - "null"
        format: date-time
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
        type:
          - integer
          - "null"
        format: int64
      deletionTimestamp:
        description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
        type:
          - string
          - "null"
        format: date-time
      finalizers:
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
        type:
          - array
          - "null"
        items:
          type:
            - string
            - "null"
        x-kubernetes-list-type: set
        x-kubernetes-patch-strategy: merge
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type:
          - string
          - "null"
      generation:
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
        type:
          - integer
          - "null"
        format: int64
      labels:
        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels'
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - string
            - "null"
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
        type:
          - array
          - "null"
        items:
          description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
          type:
            - object
            - "null"
          properties:
            apiVersion:
              description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
              type:
                - string
                - "null"
            fieldsType:
              description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
              type:
                - string
                - "null"
            fieldsV1:
              description: |-
                FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

                Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

                The exact format is defined in sigs.k8s.io/structured-merge-diff
              type:
                - object
                - "null"
            manager:
              description: Manager is an identifier of the workflow managing these fields.
              type:
                - string
                - "null"
            operation:
              description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
              type:
                - string
                - "null"
            subresource:
              description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
              type:
                - string
                - "null"
            time:
              description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
              type:
                - string
                - "null"
              format: date-time
        x-kubernetes-list-type: atomic
      name:
        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
        type:
          - string
          - "null"
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
        type:
          - string
          - "null"
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        type:
          - array
          - "null"
        items:
          description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
          type:
            - object
            - "null"
          required:
            - apiVersion
            - kind
            - name
            - uid
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
            blockOwnerDeletion:
              description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
              type:
                - boolean
                - "null"
            controller:
              description: If true, this reference points to the managing controller.
              type:
                - boolean
                - "null"
            kind:
              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            name:
              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
              type: string
            uid:
              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
              type: string
          x-kubernetes-map-type: atomic
        x-kubernetes-list-map-keys:
          - uid
        x-kubernetes-list-type: map
        x-kubernetes-patch-merge-key: uid
        x-kubernetes-patch-strategy: merge
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type:
          - string
          - "null"
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type:
          - string
          - "null"
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
        type:
          - string
          - "null"
  spec:
    description: Spec defines the desired state of GRPCRoute.
    type:
      - object
      - "null"
    properties:
      hostnames:
        description: |-
          Hostnames defines a set of hostnames to match against the GRPC
          Host header to select a GRPCRoute to process the request. This matches
          the RFC 1123 definition of a hostname with 2 notable exceptions:

          1. IPs are not allowed.
          2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
             label MUST appear by itself as the first label.

          If a hostname is specified by both the Listener and GRPCRoute, there
          MUST be at least one intersecting hostname for the GRPCRoute to be
          attached to the Listener. For example:

          * A Listener with `test.example.com` as the hostname matches GRPCRoutes
            that have either not specified any hostnames, or have specified at
            least one of `test.example.com` or `*.example.com`.
          * A Listener with `*.example.com` as the hostname matches GRPCRoutes
            that have either not specified any hostnames or have specified at least
            one hostname that matches the Listener hostname. For example,
            `test.example.com` and `*.example.com` would both match. On the other
            hand, `example.com` and `test.example.net` would not match.

          Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
          as a suffix match. That means that a match for `*.example.com` would match
          both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

          If both the Listener and GRPCRoute have specified hostnames, any
          GRPCRoute hostnames that do not match the Listener hostname MUST be
          ignored. For example, if a Listener specified `*.example.com`, and the
          GRPCRoute specified `test.example.com` and `test.example.net`,
          `test.example.net` MUST NOT be considered for a match.

          If both the Listener and GRPCRoute have specified hostnames, and none
          match with the criteria above, then the GRPCRoute MUST NOT be accepted by
          the implementation. The implementation MUST raise an 'Accepted' Condition
          with a status of `False` in the corresponding RouteParentStatus.

          If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
          Listener and that listener already has another Route (B) of the other
          type attached and the intersection of the hostnames of A and B is
          non-empty, then the implementation MUST accept exactly one of these two
          routes, determined by the following criteria, in order:

          * The oldest Route based on creation timestamp.
          * The Route appearing first in alphabetical order by
            "{namespace}/{name}".

          The rejected Route MUST raise an 'Accepted' condition with a status of
          'False' in the corresponding RouteParentStatus.

          Support: Core
        type:
          - array
          - "null"
        maxItems: 16
        items:
          description: |-
            Hostname is the fully qualified domain name of a network host. This matches
            the RFC 1123 definition of a hostname with 2 notable exceptions:

             1. IPs are not allowed.
             2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                label must appear by itself as the first label.

            Hostname can be "precise" which is a domain name without the terminating
            dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
            domain name prefixed with a single wildcard label (e.g. `*.example.com`).

            Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
            alphanumeric characters or '-', and must start and end with an alphanumeric
            character. No other punctuation is allowed.
          type:
            - string
            - "null"
          maxLength: 253
          minLength: 1
          pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      parentRefs:
        description: |+
          ParentRefs references the resources (usually Gateways) that a Route wants
          to be attached to. Note that the referenced parent resource needs to
          allow this for the attachment to be complete. For Gateways, that means
          the Gateway needs to allow attachment from Routes of this kind and
          namespace. For Services, that means the Service must either be in the same
          namespace for a "producer" route, or the mesh implementation must support
          and allow "consumer" routes for the referenced Service. ReferenceGrant is
          not applicable for governing ParentRefs to Services - it is not possible to
          create a "producer" route for a Service in a different namespace from the
          Route.

          There are two kinds of parent resources with "Core" support:

          * Gateway (Gateway conformance profile)
          * Service (Mesh conformance profile, ClusterIP Services only)

          This API may be extended in the future to support additional kinds of parent
          resources.

          ParentRefs must be _distinct_. This means either that:

          * They select different objects.  If this is the case, then parentRef
            entries are distinct. In terms of fields, this means that the
            multi-part key defined by `group`, `kind`, `namespace`, and `name` must
            be unique across all parentRef entries in the Route.
          * They do not select different objects, but for each optional field used,
            each ParentRef that selects the same object must set the same set of
            optional fields to different values. If one ParentRef sets a
            combination of optional fields, all must set the same combination.

          Some examples:

          * If one ParentRef sets `sectionName`, all ParentRefs referencing the
            same object must also set `sectionName`.
          * If one ParentRef sets `port`, all ParentRefs referencing the same
            object must also set `port`.
          * If one ParentRef sets `sectionName` and `port`, all ParentRefs
            referencing the same object must also set `sectionName` and `port`.

          It is possible to separately reference multiple distinct objects that may
          be collapsed by an implementation. For example, some implementations may
          choose to merge compatible Gateway Listeners together. If that is the
          case, the list of routes attached to those resources should also be
          merged.

          Note that for ParentRefs that cross namespace boundaries, there are specific
          rules. Cross-namespace references are only valid if they are explicitly
          allowed by something in the namespace they are referring to. For example,
          Gateway has the AllowedRoutes field, and ReferenceGrant provides a
          generic way to enable other kinds of cross-namespace reference.






        type:
          - array
          - "null"
        maxItems: 32
        items:
          description: |-
            ParentReference identifies an API object (usually a Gateway) that can be considered
            a parent of this resource (usually a route). There are two kinds of parent resources
            with "Core" support:

            * Gateway (Gateway conformance profile)
            * Service (Mesh conformance profile, ClusterIP Services only)

            This API may be extended in the future to support additional kinds of parent
            resources.

            The API object must be valid in the cluster; the Group and Kind must
            be registered in the cluster for this reference to be valid.
          type:
            - object
            - "null"
          required:
            - name
          properties:
            group:
              description: |-
                Group is the group of the referent.
                When unspecified, "gateway.networking.k8s.io" is inferred.
                To set the core API group (such as for a "Service" kind referent),
                Group must be explicitly set to "" (empty string).

                Support: Core
              type:
                - string
                - "null"
              maxLength: 253
              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
            kind:
              description: |-
                Kind is kind of the referent.

                There are two kinds of parent resources with "Core" support:

                * Gateway (Gateway conformance profile)
                * Service (Mesh conformance profile, ClusterIP Services only)

                Support for other resources is Implementation-Specific.
              type:
                - string
                - "null"
              maxLength: 63
              minLength: 1
              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
            name:
              description: |-
                Name is the name of the referent.

                Support: Core
              type: string
              maxLength: 253
              minLength: 1
            namespace:
              description: |-
                Namespace is the namespace of the referent. When unspecified, this refers
                to the local namespace of the Route.

                Note that there are specific rules for ParentRefs which cross namespace
                boundaries. Cross-namespace references are only valid if they are explicitly
                allowed by something in the namespace they are referring to. For example:
                Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                generic way to enable any other kind of cross-namespace reference.



                Support: Core
              type:
                - string
                - "null"
              maxLength: 63
              minLength: 1
              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
            port:
              description: |-
                Port is the network port this Route targets. It can be interpreted
                differently based on the type of parent resource.

                When the parent resource is a Gateway, this targets all listeners
                listening on the specified port that also support this kind of Route(and
                select this Route). It's not recommended to set `Port` unless the
                networking behaviors specified in a Route must apply to a specific port
                as opposed to a listener(s) whose port(s) may be changed. When both Port
                and SectionName are specified, the name and port of the selected listener
                must match both specified values.



                Implementations MAY choose to support other parent resources.
                Implementations supporting other types of parent resources MUST clearly
                document how/if Port is interpreted.

                For the purpose of status, an attachment is considered successful as
                long as the parent resource accepts it partially. For example, Gateway
                listeners can restrict which Routes can attach to them by Route kind,
                namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                from the referencing Route, the Route MUST be considered successfully
                attached. If no Gateway listeners accept attachment from this Route,
                the Route MUST be considered detached from the Gateway.

                Support: Extended
              type:
                - integer
                - "null"
              format: int32
              maximum: 65535
              minimum: 1
            sectionName:
              description: |-
                SectionName is the name of a section within the target resource. In the
                following resources, SectionName is interpreted as the following:

                * Gateway: Listener name. When both Port (experimental) and SectionName
                are specified, the name and port of the selected listener must match
                both specified values.
                * Service: Port name. When both Port (experimental) and SectionName
                are specified, the name and port of the selected listener must match
                both specified values.

                Implementations MAY choose to support attaching Routes to other resources.
                If that is the case, they MUST clearly document how SectionName is
                interpreted.

                When unspecified (empty string), this will reference the entire resource.
                For the purpose of status, an attachment is considered successful if at
                least one section in the parent resource accepts it. For example, Gateway
                listeners can restrict which Routes can attach to them by Route kind,
                namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                the referencing Route, the Route MUST be considered successfully
                attached. If no Gateway listeners accept attachment from this Route, the
                Route MUST be considered detached from the Gateway.

                Support: Core
              type:
                - string
                - "null"
              maxLength: 253
              minLength: 1
              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
        x-kubernetes-validations:
          - message: sectionName must be specified when parentRefs includes 2 or more references to the same parent
            rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__ == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName == '''')) : true))'
          - message: sectionName must be unique when parentRefs includes 2 or more references to the same parent
            rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName))))
      rules:
        description: |+
          Rules are a list of GRPC matchers, filters and actions.

        type:
          - array
          - "null"
        maxItems: 16
        items:
          description: |-
            GRPCRouteRule defines the semantics for matching a gRPC request based on
            conditions (matches), processing it (filters), and forwarding the request to
            an API object (backendRefs).
          type:
            - object
            - "null"
          properties:
            backendRefs:
              description: |-
                BackendRefs defines the backend(s) where matching requests should be
                sent.

                Failure behavior here depends on how many BackendRefs are specified and
                how many are invalid.

                If *all* entries in BackendRefs are invalid, and there are also no filters
                specified in this route rule, *all* traffic which matches this rule MUST
                receive an `UNAVAILABLE` status.

                See the GRPCBackendRef definition for the rules about what makes a single
                GRPCBackendRef invalid.

                When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                requests that would have otherwise been routed to an invalid backend. If
                multiple backends are specified, and some are invalid, the proportion of
                requests that would otherwise have been routed to an invalid backend
                MUST receive an `UNAVAILABLE` status.

                For example, if two backends are specified with equal weights, and one is
                invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                Implementations may choose how that 50 percent is determined.

                Support: Core for Kubernetes Service

                Support: Implementation-specific for any other resource

                Support for weight: Core
              type:
                - array
                - "null"
              maxItems: 16
              items:
                description: |-
                  GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.

                  Note that when a namespace different than the local namespace is specified, a
                  ReferenceGrant object is required in the referent namespace to allow that
                  namespace's owner to accept the reference. See the ReferenceGrant
                  documentation for details.

                  <gateway:experimental:description>

                  When the BackendRef points to a Kubernetes Service, implementations SHOULD
                  honor the appProtocol field if it is set for the target Service Port.

                  Implementations supporting appProtocol SHOULD recognize the Kubernetes
                  Standard Application Protocols defined in KEP-3726.

                  If a Service appProtocol isn't specified, an implementation MAY infer the
                  backend protocol through its own means. Implementations MAY infer the
                  protocol from the Route type referring to the backend Service.

                  If a Route is not able to send traffic to the backend using the specified
                  protocol then the backend is considered invalid. Implementations MUST set the
                  "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                  </gateway:experimental:description>
                type:
                  - object
                  - "null"
                required:
                  - name
                properties:
                  filters:
                    description: |-
                      Filters defined at this level MUST be executed if and only if the
                      request is being forwarded to the backend defined here.

                      Support: Implementation-specific (For broader support of filters, use the
                      Filters field in GRPCRouteRule.)
                    type:
                      - array
                      - "null"
                    maxItems: 16
                    items:
                      description: |-
                        GRPCRouteFilter defines processing steps that must be completed during the
                        request or response lifecycle. GRPCRouteFilters are meant as an extension
                        point to express processing that may be done in Gateway implementations. Some
                        examples include request or response modification, implementing
                        authentication strategies, rate-limiting, and traffic shaping. API
                        guarantee/conformance is defined based on the type of the filter.
                      type:
                        - object
                        - "null"
                      required:
                        - type
                      properties:
                        extensionRef:
                          description: |-
                            ExtensionRef is an optional, implementation-specific extension to the
                            "filter" behavior.  For example, resource "myroutefilter" in group
                            "networking.example.net"). ExtensionRef MUST NOT be used for core and
                            extended filters.

                            Support: Implementation-specific

                            This filter can be used multiple times within the same rule.
                          type:
                            - object
                            - "null"
                          required:
                            - group
                            - kind
                            - name
                          properties:
                            group:
                              description: |-
                                Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                When unspecified or empty string, core API group is inferred.
                              type: string
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            kind:
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                              type: string
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            name:
                              description: Name is the name of the referent.
                              type: string
                              maxLength: 253
                              minLength: 1
                        requestHeaderModifier:
                          description: |-
                            RequestHeaderModifier defines a schema for a filter that modifies request
                            headers.

                            Support: Core
                          type:
                            - object
                            - "null"
                          properties:
                            add:
                              description: |-
                                Add adds the given header(s) (name, value) to the request
                                before the action. It appends to any existing values associated
                                with the header name.

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header: foo

                                Config:
                                  add:
                                  - name: "my-header"
                                    value: "bar,baz"

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header: foo,bar,baz
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                type:
                                  - object
                                  - "null"
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP Header to be matched. Name matching MUST be
                                      case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                      If multiple entries specify equivalent header names, the first entry with
                                      an equivalent name MUST be considered for a match. Subsequent entries
                                      with an equivalent header name MUST be ignored. Due to the
                                      case-insensitivity of header names, "foo" and "Foo" are considered
                                      equivalent.
                                    type: string
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    type: string
                                    maxLength: 4096
                                    minLength: 1
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            remove:
                              description: |-
                                Remove the given header(s) from the HTTP request before the action. The
                                value of Remove is a list of HTTP header names. Note that the header
                                names are case-insensitive (see
                                https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header1: foo
                                  my-header2: bar
                                  my-header3: baz

                                Config:
                                  remove: ["my-header1", "my-header3"]

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header2: bar
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                type:
                                  - string
                                  - "null"
                              x-kubernetes-list-type: set
                            set:
                              description: |-
                                Set overwrites the request with the given header (name, value)
                                before the action.

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header: foo

                                Config:
                                  set:
                                  - name: "my-header"
                                    value: "bar"

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header: bar
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                type:
                                  - object
                                  - "null"
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP Header to be matched. Name matching MUST be
                                      case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                      If multiple entries specify equivalent header names, the first entry with
                                      an equivalent name MUST be considered for a match. Subsequent entries
                                      with an equivalent header name MUST be ignored. Due to the
                                      case-insensitivity of header names, "foo" and "Foo" are considered
                                      equivalent.
                                    type: string
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    type: string
                                    maxLength: 4096
                                    minLength: 1
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                        requestMirror:
                          description: |+
                            RequestMirror defines a schema for a filter that mirrors requests.
                            Requests are sent to the specified destination, but responses from
                            that destination are ignored.

                            This filter can be used multiple times within the same rule. Note that
                            not all implementations will be able to support mirroring to multiple
                            backends.

                            Support: Extended

                          type:
                            - object
                            - "null"
                          required:
                            - backendRef
                          properties:
                            backendRef:
                              description: |-
                                BackendRef references a resource where mirrored requests are sent.

                                Mirrored requests must be sent only to a single destination endpoint
                                within this BackendRef, irrespective of how many endpoints are present
                                within this BackendRef.

                                If the referent cannot be found, this BackendRef is invalid and must be
                                dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                condition on the Route status is set to `status: False` and not configure
                                this backend in the underlying implementation.

                                If there is a cross-namespace reference to an *existing* object
                                that is not allowed by a ReferenceGrant, the controller must ensure the
                                "ResolvedRefs"  condition on the Route is set to `status: False`,
                                with the "RefNotPermitted" reason and not configure this backend in the
                                underlying implementation.

                                In either error case, the Message of the `ResolvedRefs` Condition
                                should be used to provide more detail about the problem.

                                Support: Extended for Kubernetes Service

                                Support: Implementation-specific for any other resource
                              type: object
                              required:
                                - name
                              properties:
                                group:
                                  description: |-
                                    Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                    When unspecified or empty string, core API group is inferred.
                                  type:
                                    - string
                                    - "null"
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                kind:
                                  description: |-
                                    Kind is the Kubernetes resource kind of the referent. For example
                                    "Service".

                                    Defaults to "Service" when not specified.

                                    ExternalName services can refer to CNAME DNS records that may live
                                    outside of the cluster and as such are difficult to reason about in
                                    terms of conformance. They also may not be safe to forward to (see
                                    CVE-2021-25740 for more information). Implementations SHOULD NOT
                                    support ExternalName Services.

                                    Support: Core (Services with a type other than ExternalName)

                                    Support: Implementation-specific (Services with type ExternalName)
                                  type:
                                    - string
                                    - "null"
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                name:
                                  description: Name is the name of the referent.
                                  type: string
                                  maxLength: 253
                                  minLength: 1
                                namespace:
                                  description: |-
                                    Namespace is the namespace of the backend. When unspecified, the local
                                    namespace is inferred.

                                    Note that when a namespace different than the local namespace is specified,
                                    a ReferenceGrant object is required in the referent namespace to allow that
                                    namespace's owner to accept the reference. See the ReferenceGrant
                                    documentation for details.

                                    Support: Core
                                  type:
                                    - string
                                    - "null"
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                port:
                                  description: |-
                                    Port specifies the destination port number to use for this resource.
                                    Port is required when the referent is a Kubernetes Service. In this
                                    case, the port number is the service port number, not the target port.
                                    For other resources, destination port might be derived from the referent
                                    resource or this field.
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                              x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'') ? has(self.port) : true'
                        responseHeaderModifier:
                          description: |-
                            ResponseHeaderModifier defines a schema for a filter that modifies response
                            headers.

                            Support: Extended
                          type:
                            - object
                            - "null"
                          properties:
                            add:
                              description: |-
                                Add adds the given header(s) (name, value) to the request
                                before the action. It appends to any existing values associated
                                with the header name.

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header: foo

                                Config:
                                  add:
                                  - name: "my-header"
                                    value: "bar,baz"

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header: foo,bar,baz
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                type:
                                  - object
                                  - "null"
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP Header to be matched. Name matching MUST be
                                      case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                      If multiple entries specify equivalent header names, the first entry with
                                      an equivalent name MUST be considered for a match. Subsequent entries
                                      with an equivalent header name MUST be ignored. Due to the
                                      case-insensitivity of header names, "foo" and "Foo" are considered
                                      equivalent.
                                    type: string
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    type: string
                                    maxLength: 4096
                                    minLength: 1
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            remove:
                              description: |-
                                Remove the given header(s) from the HTTP request before the action. The
                                value of Remove is a list of HTTP header names. Note that the header
                                names are case-insensitive (see
                                https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header1: foo
                                  my-header2: bar
                                  my-header3: baz

                                Config:
                                  remove: ["my-header1", "my-header3"]

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header2: bar
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                type:
                                  - string
                                  - "null"
                              x-kubernetes-list-type: set
                            set:
                              description: |-
                                Set overwrites the request with the given header (name, value)
                                before the action.

                                Input:
                                  GET /foo HTTP/1.1
                                  my-header: foo

                                Config:
                                  set:
                                  - name: "my-header"
                                    value: "bar"

                                Output:
                                  GET /foo HTTP/1.1
                                  my-header: bar
                              type:
                                - array
                                - "null"
                              maxItems: 16
                              items:
                                description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                type:
                                  - object
                                  - "null"
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP Header to be matched. Name matching MUST be
                                      case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                      If multiple entries specify equivalent header names, the first entry with
                                      an equivalent name MUST be considered for a match. Subsequent entries
                                      with an equivalent header name MUST be ignored. Due to the
                                      case-insensitivity of header names, "foo" and "Foo" are considered
                                      equivalent.
                                    type: string
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    type: string
                                    maxLength: 4096
                                    minLength: 1
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                        type:
                          description: |+
                            Type identifies the type of filter to apply. As with other API fields,
                            types are classified into three conformance levels:

                            - Core: Filter types and their corresponding configuration defined by
                              "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                              implementations supporting GRPCRoute MUST support core filters.

                            - Extended: Filter types and their corresponding configuration defined by
                              "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                              are encouraged to support extended filters.

                            - Implementation-specific: Filters that are defined and supported by specific vendors.
                              In the future, filters showing convergence in behavior across multiple
                              implementations will be considered for inclusion in extended or core
                              conformance levels. Filter-specific configuration for such filters
                              is specified using the ExtensionRef field. `Type` MUST be set to
                              "ExtensionRef" for custom filters.

                            Implementers are encouraged to define custom implementation types to
                            extend the core API with implementation-specific behavior.

                            If a reference to a custom filter type cannot be resolved, the filter
                            MUST NOT be skipped. Instead, requests that would have been processed by
                            that filter MUST receive a HTTP error response.

                          type: string
                          enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                      x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type != ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type == ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type != ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                    x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1
                  group:
                    description: |-
                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                      When unspecified or empty string, core API group is inferred.
                    type:
                      - string
                      - "null"
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  kind:
                    description: |-
                      Kind is the Kubernetes resource kind of the referent. For example
                      "Service".

                      Defaults to "Service" when not specified.

                      ExternalName services can refer to CNAME DNS records that may live
                      outside of the cluster and as such are difficult to reason about in
                      terms of conformance. They also may not be safe to forward to (see
                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                      support ExternalName Services.

                      Support: Core (Services with a type other than ExternalName)

                      Support: Implementation-specific (Services with type ExternalName)
                    type:
                      - string
                      - "null"
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                  name:
                    description: Name is the name of the referent.
                    type: string
                    maxLength: 253
                    minLength: 1
                  namespace:
                    description: |-
                      Namespace is the namespace of the backend. When unspecified, the local
                      namespace is inferred.

                      Note that when a namespace different than the local namespace is specified,
                      a ReferenceGrant object is required in the referent namespace to allow that
                      namespace's owner to accept the reference. See the ReferenceGrant
                      documentation for details.

                      Support: Core
                    type:
                      - string
                      - "null"
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                  port:
                    description: |-
                      Port specifies the destination port number to use for this resource.
                      Port is required when the referent is a Kubernetes Service. In this
                      case, the port number is the service port number, not the target port.
                      For other resources, destination port might be derived from the referent
                      resource or this field.
                    type:
                      - integer
                      - "null"
                    format: int32
                    maximum: 65535
                    minimum: 1
                  weight:
                    description: |-
                      Weight specifies the proportion of requests forwarded to the referenced
                      backend. This is computed as weight/(sum of all weights in this
                      BackendRefs list). For non-zero values, there may be some epsilon from
                      the exact proportion defined here depending on the precision an
                      implementation supports. Weight is not a percentage and the sum of
                      weights does not need to equal 100.

                      If only one backend is specified and it has a weight greater than 0, 100%
                      of the traffic is forwarded to that backend. If weight is set to 0, no
                      traffic should be forwarded for this entry. If unspecified, weight
                      defaults to 1.

                      Support for this field varies based on the context where used.
                    type:
                      - integer
                      - "null"
                    format: int32
                    maximum: 1000000
                    minimum: 0
                x-kubernetes-validations:
                  - message: Must have port for Service reference
                    rule: '(size(self.group) == 0 && self.kind == ''Service'') ? has(self.port) : true'
            filters:
              description: |-
                Filters define the filters that are applied to requests that match
                this rule.

                The effects of ordering of multiple behaviors are currently unspecified.
                This can change in the future based on feedback during the alpha stage.

                Conformance-levels at this level are defined based on the type of filter:

                - ALL core filters MUST be supported by all implementations that support
                  GRPCRoute.
                - Implementers are encouraged to support extended filters.
                - Implementation-specific custom filters have no API guarantees across
                  implementations.

                Specifying the same filter multiple times is not supported unless explicitly
                indicated in the filter.

                If an implementation can not support a combination of filters, it must clearly
                document that limitation. In cases where incompatible or unsupported
                filters are specified and cause the `Accepted` condition to be set to status
                `False`, implementations may use the `IncompatibleFilters` reason to specify
                this configuration error.

                Support: Core
              type:
                - array
                - "null"
              maxItems: 16
              items:
                description: |-
                  GRPCRouteFilter defines processing steps that must be completed during the
                  request or response lifecycle. GRPCRouteFilters are meant as an extension
                  point to express processing that may be done in Gateway implementations. Some
                  examples include request or response modification, implementing
                  authentication strategies, rate-limiting, and traffic shaping. API
                  guarantee/conformance is defined based on the type of the filter.
                type:
                  - object
                  - "null"
                required:
                  - type
                properties:
                  extensionRef:
                    description: |-
                      ExtensionRef is an optional, implementation-specific extension to the
                      "filter" behavior.  For example, resource "myroutefilter" in group
                      "networking.example.net"). ExtensionRef MUST NOT be used for core and
                      extended filters.

                      Support: Implementation-specific

                      This filter can be used multiple times within the same rule.
                    type:
                      - object
                      - "null"
                    required:
                      - group
                      - kind
                      - name
                    properties:
                      group:
                        description: |-
                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                          When unspecified or empty string, core API group is inferred.
                        type: string
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      kind:
                        description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                        type: string
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      name:
                        description: Name is the name of the referent.
                        type: string
                        maxLength: 253
                        minLength: 1
                  requestHeaderModifier:
                    description: |-
                      RequestHeaderModifier defines a schema for a filter that modifies request
                      headers.

                      Support: Core
                    type:
                      - object
                      - "null"
                    properties:
                      add:
                        description: |-
                          Add adds the given header(s) (name, value) to the request
                          before the action. It appends to any existing values associated
                          with the header name.

                          Input:
                            GET /foo HTTP/1.1
                            my-header: foo

                          Config:
                            add:
                            - name: "my-header"
                              value: "bar,baz"

                          Output:
                            GET /foo HTTP/1.1
                            my-header: foo,bar,baz
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                          type:
                            - object
                            - "null"
                          required:
                            - name
                            - value
                          properties:
                            name:
                              description: |-
                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                If multiple entries specify equivalent header names, the first entry with
                                an equivalent name MUST be considered for a match. Subsequent entries
                                with an equivalent header name MUST be ignored. Due to the
                                case-insensitivity of header names, "foo" and "Foo" are considered
                                equivalent.
                              type: string
                              maxLength: 256
                              minLength: 1
                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            value:
                              description: Value is the value of HTTP Header to be matched.
                              type: string
                              maxLength: 4096
                              minLength: 1
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      remove:
                        description: |-
                          Remove the given header(s) from the HTTP request before the action. The
                          value of Remove is a list of HTTP header names. Note that the header
                          names are case-insensitive (see
                          https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                          Input:
                            GET /foo HTTP/1.1
                            my-header1: foo
                            my-header2: bar
                            my-header3: baz

                          Config:
                            remove: ["my-header1", "my-header3"]

                          Output:
                            GET /foo HTTP/1.1
                            my-header2: bar
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          type:
                            - string
                            - "null"
                        x-kubernetes-list-type: set
                      set:
                        description: |-
                          Set overwrites the request with the given header (name, value)
                          before the action.

                          Input:
                            GET /foo HTTP/1.1
                            my-header: foo

                          Config:
                            set:
                            - name: "my-header"
                              value: "bar"

                          Output:
                            GET /foo HTTP/1.1
                            my-header: bar
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                          type:
                            - object
                            - "null"
                          required:
                            - name
                            - value
                          properties:
                            name:
                              description: |-
                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                If multiple entries specify equivalent header names, the first entry with
                                an equivalent name MUST be considered for a match. Subsequent entries
                                with an equivalent header name MUST be ignored. Due to the
                                case-insensitivity of header names, "foo" and "Foo" are considered
                                equivalent.
                              type: string
                              maxLength: 256
                              minLength: 1
                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            value:
                              description: Value is the value of HTTP Header to be matched.
                              type: string
                              maxLength: 4096
                              minLength: 1
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                  requestMirror:
                    description: |+
                      RequestMirror defines a schema for a filter that mirrors requests.
                      Requests are sent to the specified destination, but responses from
                      that destination are ignored.

                      This filter can be used multiple times within the same rule. Note that
                      not all implementations will be able to support mirroring to multiple
                      backends.

                      Support: Extended

                    type:
                      - object
                      - "null"
                    required:
                      - backendRef
                    properties:
                      backendRef:
                        description: |-
                          BackendRef references a resource where mirrored requests are sent.

                          Mirrored requests must be sent only to a single destination endpoint
                          within this BackendRef, irrespective of how many endpoints are present
                          within this BackendRef.

                          If the referent cannot be found, this BackendRef is invalid and must be
                          dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                          condition on the Route status is set to `status: False` and not configure
                          this backend in the underlying implementation.

                          If there is a cross-namespace reference to an *existing* object
                          that is not allowed by a ReferenceGrant, the controller must ensure the
                          "ResolvedRefs"  condition on the Route is set to `status: False`,
                          with the "RefNotPermitted" reason and not configure this backend in the
                          underlying implementation.

                          In either error case, the Message of the `ResolvedRefs` Condition
                          should be used to provide more detail about the problem.

                          Support: Extended for Kubernetes Service

                          Support: Implementation-specific for any other resource
                        type: object
                        required:
                          - name
                        properties:
                          group:
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            type:
                              - string
                              - "null"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          kind:
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            type:
                              - string
                              - "null"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          name:
                            description: Name is the name of the referent.
                            type: string
                            maxLength: 253
                            minLength: 1
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            type:
                              - string
                              - "null"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            type:
                              - integer
                              - "null"
                            format: int32
                            maximum: 65535
                            minimum: 1
                        x-kubernetes-validations:
                          - message: Must have port for Service reference
                            rule: '(size(self.group) == 0 && self.kind == ''Service'') ? has(self.port) : true'
                  responseHeaderModifier:
                    description: |-
                      ResponseHeaderModifier defines a schema for a filter that modifies response
                      headers.

                      Support: Extended
                    type:
                      - object
                      - "null"
                    properties:
                      add:
                        description: |-
                          Add adds the given header(s) (name, value) to the request
                          before the action. It appends to any existing values associated
                          with the header name.

                          Input:
                            GET /foo HTTP/1.1
                            my-header: foo

                          Config:
                            add:
                            - name: "my-header"
                              value: "bar,baz"

                          Output:
                            GET /foo HTTP/1.1
                            my-header: foo,bar,baz
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                          type:
                            - object
                            - "null"
                          required:
                            - name
                            - value
                          properties:
                            name:
                              description: |-
                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                If multiple entries specify equivalent header names, the first entry with
                                an equivalent name MUST be considered for a match. Subsequent entries
                                with an equivalent header name MUST be ignored. Due to the
                                case-insensitivity of header names, "foo" and "Foo" are considered
                                equivalent.
                              type: string
                              maxLength: 256
                              minLength: 1
                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            value:
                              description: Value is the value of HTTP Header to be matched.
                              type: string
                              maxLength: 4096
                              minLength: 1
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      remove:
                        description: |-
                          Remove the given header(s) from the HTTP request before the action. The
                          value of Remove is a list of HTTP header names. Note that the header
                          names are case-insensitive (see
                          https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                          Input:
                            GET /foo HTTP/1.1
                            my-header1: foo
                            my-header2: bar
                            my-header3: baz

                          Config:
                            remove: ["my-header1", "my-header3"]

                          Output:
                            GET /foo HTTP/1.1
                            my-header2: bar
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          type:
                            - string
                            - "null"
                        x-kubernetes-list-type: set
                      set:
                        description: |-
                          Set overwrites the request with the given header (name, value)
                          before the action.

                          Input:
                            GET /foo HTTP/1.1
                            my-header: foo

                          Config:
                            set:
                            - name: "my-header"
                              value: "bar"

                          Output:
                            GET /foo HTTP/1.1
                            my-header: bar
                        type:
                          - array
                          - "null"
                        maxItems: 16
                        items:
                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                          type:
                            - object
                            - "null"
                          required:
                            - name
                            - value
                          properties:
                            name:
                              description: |-
                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                If multiple entries specify equivalent header names, the first entry with
                                an equivalent name MUST be considered for a match. Subsequent entries
                                with an equivalent header name MUST be ignored. Due to the
                                case-insensitivity of header names, "foo" and "Foo" are considered
                                equivalent.
                              type: string
                              maxLength: 256
                              minLength: 1
                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            value:
                              description: Value is the value of HTTP Header to be matched.
                              type: string
                              maxLength: 4096
                              minLength: 1
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                  type:
                    description: |+
                      Type identifies the type of filter to apply. As with other API fields,
                      types are classified into three conformance levels:

                      - Core: Filter types and their corresponding configuration defined by
                        "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                        implementations supporting GRPCRoute MUST support core filters.

                      - Extended: Filter types and their corresponding configuration defined by
                        "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                        are encouraged to support extended filters.

                      - Implementation-specific: Filters that are defined and supported by specific vendors.
                        In the future, filters showing convergence in behavior across multiple
                        implementations will be considered for inclusion in extended or core
                        conformance levels. Filter-specific configuration for such filters
                        is specified using the ExtensionRef field. `Type` MUST be set to
                        "ExtensionRef" for custom filters.

                      Implementers are encouraged to define custom implementation types to
                      extend the core API with implementation-specific behavior.

                      If a reference to a custom filter type cannot be resolved, the filter
                      MUST NOT be skipped. Instead, requests that would have been processed by
                      that filter MUST receive a HTTP error response.

                    type: string
                    enum:
                      - ResponseHeaderModifier
                      - RequestHeaderModifier
                      - RequestMirror
                      - ExtensionRef
                x-kubernetes-validations:
                  - message: filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier
                    rule: '!(has(self.requestHeaderModifier) && self.type != ''RequestHeaderModifier'')'
                  - message: filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type
                    rule: '!(!has(self.requestHeaderModifier) && self.type == ''RequestHeaderModifier'')'
                  - message: filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier
                    rule: '!(has(self.responseHeaderModifier) && self.type != ''ResponseHeaderModifier'')'
                  - message: filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type
                    rule: '!(!has(self.responseHeaderModifier) && self.type == ''ResponseHeaderModifier'')'
                  - message: filter.requestMirror must be nil if the filter.type is not RequestMirror
                    rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                  - message: filter.requestMirror must be specified for RequestMirror filter.type
                    rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                  - message: filter.extensionRef must be nil if the filter.type is not ExtensionRef
                    rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                  - message: filter.extensionRef must be specified for ExtensionRef filter.type
                    rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
              x-kubernetes-validations:
                - message: RequestHeaderModifier filter cannot be repeated
                  rule: self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1
                - message: ResponseHeaderModifier filter cannot be repeated
                  rule: self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1
            matches:
              description: |-
                Matches define conditions used for matching the rule against incoming
                gRPC requests. Each match is independent, i.e. this rule will be matched
                if **any** one of the matches is satisfied.

                For example, take the following matches configuration:

                ```
                matches:
                - method:
                    service: foo.bar
                  headers:
                    values:
                      version: 2
                - method:
                    service: foo.bar.v2
                ```

                For a request to match against this rule, it MUST satisfy
                EITHER of the two conditions:

                - service of foo.bar AND contains the header `version: 2`
                - service of foo.bar.v2

                See the documentation for GRPCRouteMatch on how to specify multiple
                match conditions to be ANDed together.

                If no matches are specified, the implementation MUST match every gRPC request.

                Proxy or Load Balancer routing configuration generated from GRPCRoutes
                MUST prioritize rules based on the following criteria, continuing on
                ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                Precedence MUST be given to the rule with the largest number of:

                * Characters in a matching non-wildcard hostname.
                * Characters in a matching hostname.
                * Characters in a matching service.
                * Characters in a matching method.
                * Header matches.

                If ties still exist across multiple Routes, matching precedence MUST be
                determined in order of the following criteria, continuing on ties:

                * The oldest Route based on creation timestamp.
                * The Route appearing first in alphabetical order by
                  "{namespace}/{name}".

                If ties still exist within the Route that has been given precedence,
                matching precedence MUST be granted to the first matching rule meeting
                the above criteria.
              type:
                - array
                - "null"
              maxItems: 8
              items:
                description: |-
                  GRPCRouteMatch defines the predicate used to match requests to a given
                  action. Multiple match types are ANDed together, i.e. the match will
                  evaluate to true only if all conditions are satisfied.

                  For example, the match below will match a gRPC request only if its service
                  is `foo` AND it contains the `version: v1` header:

                  ```
                  matches:
                    - method:
                      type: Exact
                      service: "foo"
                      headers:
                    - name: "version"
                      value "v1"

                  ```
                type:
                  - object
                  - "null"
                properties:
                  headers:
                    description: |-
                      Headers specifies gRPC request header matchers. Multiple match values are
                      ANDed together, meaning, a request MUST match all the specified headers
                      to select the route.
                    type:
                      - array
                      - "null"
                    maxItems: 16
                    items:
                      description: |-
                        GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                        headers.
                      type:
                        - object
                        - "null"
                      required:
                        - name
                        - value
                      properties:
                        name:
                          description: |-
                            Name is the name of the gRPC Header to be matched.

                            If multiple entries specify equivalent header names, only the first
                            entry with an equivalent name MUST be considered for a match. Subsequent
                            entries with an equivalent header name MUST be ignored. Due to the
                            case-insensitivity of header names, "foo" and "Foo" are considered
                            equivalent.
                          type: string
                          maxLength: 256
                          minLength: 1
                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                        type:
                          description: Type specifies how to match against the value of the header.
                          type:
                            - string
                            - "null"
                          enum:
                            - Exact
                            - RegularExpression
                        value:
                          description: Value is the value of the gRPC Header to be matched.
                          type: string
                          maxLength: 4096
                          minLength: 1
                    x-kubernetes-list-map-keys:
                      - name
                    x-kubernetes-list-type: map
                  method:
                    description: |-
                      Method specifies a gRPC request service/method matcher. If this field is
                      not specified, all services and methods will match.
                    type:
                      - object
                      - "null"
                    properties:
                      method:
                        description: |-
                          Value of the method to match against. If left empty or omitted, will
                          match all services.

                          At least one of Service and Method MUST be a non-empty string.
                        type:
                          - string
                          - "null"
                        maxLength: 1024
                      service:
                        description: |-
                          Value of the service to match against. If left empty or omitted, will
                          match any service.

                          At least one of Service and Method MUST be a non-empty string.
                        type:
                          - string
                          - "null"
                        maxLength: 1024
                      type:
                        description: |-
                          Type specifies how to match against the service and/or method.
                          Support: Core (Exact with service and method specified)

                          Support: Implementation-specific (Exact with method specified but no service specified)

                          Support: Implementation-specific (RegularExpression)
                        type:
                          - string
                          - "null"
                        enum:
                          - Exact
                          - RegularExpression
                    x-kubernetes-validations:
                      - message: One or both of 'service' or 'method' must be specified
                        rule: 'has(self.type) ? has(self.service) || has(self.method) : true'
                      - message: service must only contain valid characters (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                        rule: '(!has(self.type) || self.type == ''Exact'') && has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""): true'
                      - message: method must only contain valid characters (matching ^[A-Za-z_][A-Za-z_0-9]*$)
                        rule: '(!has(self.type) || self.type == ''Exact'') && has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""): true'
        x-kubernetes-validations:
          - message: While 16 rules and 64 matches per rule are allowed, the total number of matches across all rules in a route must be less than 128
            rule: '(self.size() > 0 ? (has(self[0].matches) ? self[0].matches.size() : 0) : 0) + (self.size() > 1 ? (has(self[1].matches) ? self[1].matches.size() : 0) : 0) + (self.size() > 2 ? (has(self[2].matches) ? self[2].matches.size() : 0) : 0) + (self.size() > 3 ? (has(self[3].matches) ? self[3].matches.size() : 0) : 0) + (self.size() > 4 ? (has(self[4].matches) ? self[4].matches.size() : 0) : 0) + (self.size() > 5 ? (has(self[5].matches) ? self[5].matches.size() : 0) : 0) + (self.size() > 6 ? (has(self[6].matches) ? self[6].matches.size() : 0) : 0) + (self.size() > 7 ? (has(self[7].matches) ? self[7].matches.size() : 0) : 0) + (self.size() > 8 ? (has(self[8].matches) ? self[8].matches.size() : 0) : 0) + (self.size() > 9 ? (has(self[9].matches) ? self[9].matches.size() : 0) : 0) + (self.size() > 10 ? (has(self[10].matches) ? self[10].matches.size() : 0) : 0) + (self.size() > 11 ? (has(self[11].matches) ? self[11].matches.size() : 0) : 0) + (self.size() > 12 ? (has(self[12].matches) ? self[12].matches.size() : 0) : 0) + (self.size() > 13 ? (has(self[13].matches) ? self[13].matches.size() : 0) : 0) + (self.size() > 14 ? (has(self[14].matches) ? self[14].matches.size() : 0) : 0) + (self.size() > 15 ? (has(self[15].matches) ? self[15].matches.size() : 0) : 0) <= 128'
  status:
    description: Status defines the current state of GRPCRoute.
    type:
      - object
      - "null"
    required:
      - parents
    properties:
      parents:
        description: |-
          Parents is a list of parent resources (usually Gateways) that are
          associated with the route, and the status of the route with respect to
          each parent. When this route attaches to a parent, the controller that
          manages the parent must add an entry to this list when the controller
          first sees the route and should update the entry as appropriate when the
          route or gateway is modified.

          Note that parent references that cannot be resolved by an implementation
          of this API will not be added to this list. Implementations of this API
          can only populate Route status for the Gateways/parent resources they are
          responsible for.

          A maximum of 32 Gateways will be represented in this list. An empty list
          means the route has not been attached to any Gateway.
        type: array
        maxItems: 32
        items:
          description: |-
            RouteParentStatus describes the status of a route with respect to an
            associated Parent.
          type:
            - object
            - "null"
          required:
            - controllerName
            - parentRef
          properties:
            conditions:
              description: |-
                Conditions describes the status of the route with respect to the Gateway.
                Note that the route's availability is also subject to the Gateway's own
                status conditions and listener status.

                If the Route's ParentRef specifies an existing Gateway that supports
                Routes of this kind AND that Gateway's controller has sufficient access,
                then that Gateway's controller MUST set the "Accepted" condition on the
                Route, to indicate whether the route has been accepted or rejected by the
                Gateway, and why.

                A Route MUST be considered "Accepted" if at least one of the Route's
                rules is implemented by the Gateway.

                There are a number of cases where the "Accepted" condition may not be set
                due to lack of controller visibility, that includes when:

                * The Route refers to a non-existent parent.
                * The Route is of a type that the controller does not support.
                * The Route is in a namespace the controller does not have access to.
              type:
                - array
                - "null"
              maxItems: 8
              minItems: 1
              items:
                description: Condition contains details for one aspect of the current state of this API Resource.
                type:
                  - object
                  - "null"
                required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                properties:
                  lastTransitionTime:
                    description: |-
                      lastTransitionTime is the last time the condition transitioned from one status to another.
                      This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: |-
                      message is a human readable message indicating details about the transition.
                      This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: |-
                      observedGeneration represents the .metadata.generation that the condition was set based upon.
                      For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                      with respect to the current state of the instance.
                    type:
                      - integer
                      - "null"
                    format: int64
                    minimum: 0
                  reason:
                    description: |-
                      reason contains a programmatic identifier indicating the reason for the condition's last transition.
                      Producers of specific condition types may define expected values and meanings for this field,
                      and whether the values are considered a guaranteed API.
                      The value should be a CamelCase string.
                      This field may not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                      - "True"
                      - "False"
                      - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              x-kubernetes-list-map-keys:
                - type
              x-kubernetes-list-type: map
            controllerName:
              description: |-
                ControllerName is a domain/path string that indicates the name of the
                controller that wrote this status. This corresponds with the
                controllerName field on GatewayClass.

                Example: "example.net/gateway-controller".

                The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                valid Kubernetes names
                (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                Controllers MUST populate this field when writing status. Controllers should ensure that
                entries to status populated with their ControllerName are cleaned up when they are no
                longer necessary.
              type: string
              maxLength: 253
              minLength: 1
              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
            parentRef:
              description: |-
                ParentRef corresponds with a ParentRef in the spec that this
                RouteParentStatus struct describes the status of.
              type: object
              required:
                - name
              properties:
                group:
                  description: |-
                    Group is the group of the referent.
                    When unspecified, "gateway.networking.k8s.io" is inferred.
                    To set the core API group (such as for a "Service" kind referent),
                    Group must be explicitly set to "" (empty string).

                    Support: Core
                  type:
                    - string
                    - "null"
                  maxLength: 253
                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                kind:
                  description: |-
                    Kind is kind of the referent.

                    There are two kinds of parent resources with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    Support for other resources is Implementation-Specific.
                  type:
                    - string
                    - "null"
                  maxLength: 63
                  minLength: 1
                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                name:
                  description: |-
                    Name is the name of the referent.

                    Support: Core
                  type: string
                  maxLength: 253
                  minLength: 1
                namespace:
                  description: |-
                    Namespace is the namespace of the referent. When unspecified, this refers
                    to the local namespace of the Route.

                    Note that there are specific rules for ParentRefs which cross namespace
                    boundaries. Cross-namespace references are only valid if they are explicitly
                    allowed by something in the namespace they are referring to. For example:
                    Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                    generic way to enable any other kind of cross-namespace reference.



                    Support: Core
                  type:
                    - string
                    - "null"
                  maxLength: 63
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                port:
                  description: |-
                    Port is the network port this Route targets. It can be interpreted
                    differently based on the type of parent resource.

                    When the parent resource is a Gateway, this targets all listeners
                    listening on the specified port that also support this kind of Route(and
                    select this Route). It's not recommended to set `Port` unless the
                    networking behaviors specified in a Route must apply to a specific port
                    as opposed to a listener(s) whose port(s) may be changed. When both Port
                    and SectionName are specified, the name and port of the selected listener
                    must match both specified values.



                    Implementations MAY choose to support other parent resources.
                    Implementations supporting other types of parent resources MUST clearly
                    document how/if Port is interpreted.

                    For the purpose of status, an attachment is considered successful as
                    long as the parent resource accepts it partially. For example, Gateway
                    listeners can restrict which Routes can attach to them by Route kind,
                    namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                    from the referencing Route, the Route MUST be considered successfully
                    attached. If no Gateway listeners accept attachment from this Route,
                    the Route MUST be considered detached from the Gateway.

                    Support: Extended
                  type:
                    - integer
                    - "null"
                  format: int32
                  maximum: 65535
                  minimum: 1
                sectionName:
                  description: |-
                    SectionName is the name of a section within the target resource. In the
                    following resources, SectionName is interpreted as the following:

                    * Gateway: Listener name. When both Port (experimental) and SectionName
                    are specified, the name and port of the selected listener must match
                    both specified values.
                    * Service: Port name. When both Port (experimental) and SectionName
                    are specified, the name and port of the selected listener must match
                    both specified values.

                    Implementations MAY choose to support attaching Routes to other resources.
                    If that is the case, they MUST clearly document how SectionName is
                    interpreted.

                    When unspecified (empty string), this will reference the entire resource.
                    For the purpose of status, an attachment is considered successful if at
                    least one section in the parent resource accepts it. For example, Gateway
                    listeners can restrict which Routes can attach to them by Route kind,
                    namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                    the referencing Route, the Route MUST be considered successfully
                    attached. If no Gateway listeners accept attachment from this Route, the
                    Route MUST be considered detached from the Gateway.

                    Support: Core
                  type:
                    - string
                    - "null"
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
x-kubernetes-group-version-kind:
  - group: gateway.networking.k8s.io
    kind: GRPCRoute
    version: v1
$schema: http://json-schema.org/schema#
