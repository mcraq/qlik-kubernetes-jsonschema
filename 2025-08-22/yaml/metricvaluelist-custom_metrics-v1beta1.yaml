description: MetricValueList is a list of values for a given metric for some set of objects
type: object
required:
  - items
properties:
  apiVersion:
    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
    type:
      - string
      - "null"
    enum:
      - custom.metrics.k8s.io/v1beta1
  items:
    description: the value of the metric across the described objects
    type:
      - array
      - "null"
    items:
      description: MetricValue is a metric value for some object
      type:
        - object
        - "null"
      required:
        - describedObject
        - metricName
        - timestamp
        - value
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type:
            - string
            - "null"
          enum:
            - custom.metrics.k8s.io/v1beta1
        describedObject:
          description: ObjectReference contains enough information to let you inspect or modify the referred object.
          type: object
          properties:
            apiVersion:
              description: API version of the referent.
              type:
                - string
                - "null"
            fieldPath:
              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.'
              type:
                - string
                - "null"
            kind:
              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type:
                - string
                - "null"
            name:
              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
              type:
                - string
                - "null"
            namespace:
              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
              type:
                - string
                - "null"
            resourceVersion:
              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
              type:
                - string
                - "null"
            uid:
              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
              type:
                - string
                - "null"
          x-kubernetes-map-type: atomic
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type:
            - string
            - "null"
          enum:
            - MetricValue
        metricName:
          description: the name of the metric
          type: string
        selector:
          description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
          type:
            - object
            - "null"
          properties:
            matchExpressions:
              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
              type:
                - array
                - "null"
              items:
                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                type:
                  - object
                  - "null"
                required:
                  - key
                  - operator
                properties:
                  key:
                    description: key is the label key that the selector applies to.
                    type: string
                    x-kubernetes-patch-merge-key: key
                    x-kubernetes-patch-strategy: merge
                  operator:
                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                    type: string
                  values:
                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                    type:
                      - array
                      - "null"
                    items:
                      type:
                        - string
                        - "null"
            matchLabels:
              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
          x-kubernetes-map-type: atomic
        timestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
          type: string
          format: date-time
        value:
          description: |-
            Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

            The serialization format is:

            <quantity>        ::= <signedNumber><suffix>
              (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
            <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
              (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            <decimalSI>       ::= m | "" | k | M | G | T | P | E
              (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

            No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
              a. No precision is lost
              b. No fractional digits will be emitted
              c. The exponent (or suffix) is as large as possible.
            The sign will be omitted unless the number is negative.

            Examples:
              1.5 will be serialized as "1500m"
              1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

            This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
          type: string
        window:
          description: indicates the window ([Timestamp-Window, Timestamp]) from which these metrics were calculated, when returning rate metrics calculated from cumulative metrics (or zero for non-calculated instantaneous metrics).
          type:
            - integer
            - "null"
          format: int64
      x-kubernetes-group-version-kind:
        - group: custom.metrics.k8s.io
          kind: MetricValue
          version: v1beta1
  kind:
    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
    type:
      - string
      - "null"
    enum:
      - MetricValueList
  metadata:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    type:
      - object
      - "null"
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type:
          - string
          - "null"
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type:
          - integer
          - "null"
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type:
          - string
          - "null"
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type:
          - string
          - "null"
x-kubernetes-group-version-kind:
  - group: custom.metrics.k8s.io
    kind: MetricValueList
    version: v1beta1
$schema: http://json-schema.org/schema#
