description: GatewayList is a list of Gateway
type: object
required:
  - items
properties:
  apiVersion:
    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
    type:
      - string
      - "null"
    enum:
      - gateway.networking.k8s.io/v1beta1
  items:
    description: 'List of gateways. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
    type:
      - array
      - "null"
    items:
      description: |-
        Gateway represents an instance of a service-traffic handling infrastructure
        by binding Listeners to a set of IP addresses.
      type:
        - object
        - "null"
      required:
        - spec
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type:
            - string
            - "null"
          enum:
            - gateway.networking.k8s.io/v1beta1
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type:
            - string
            - "null"
          enum:
            - Gateway
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
          type:
            - object
            - "null"
          properties:
            annotations:
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations'
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            creationTimestamp:
              description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
              type:
                - string
                - "null"
              format: date-time
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
              type:
                - integer
                - "null"
              format: int64
            deletionTimestamp:
              description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
              type:
                - string
                - "null"
              format: date-time
            finalizers:
              description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              x-kubernetes-list-type: set
              x-kubernetes-patch-strategy: merge
            generateName:
              description: |-
                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                If this field is specified and the generated name exists, the server will return a 409.

                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
              type:
                - string
                - "null"
            generation:
              description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
              type:
                - integer
                - "null"
              format: int64
            labels:
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels'
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
              type:
                - array
                - "null"
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
                type:
                  - object
                  - "null"
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
                    type:
                      - string
                      - "null"
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
                    type:
                      - string
                      - "null"
                  fieldsV1:
                    description: |-
                      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

                      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

                      The exact format is defined in sigs.k8s.io/structured-merge-diff
                    type:
                      - object
                      - "null"
                  manager:
                    description: Manager is an identifier of the workflow managing these fields.
                    type:
                      - string
                      - "null"
                  operation:
                    description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
                    type:
                      - string
                      - "null"
                  subresource:
                    description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
                    type:
                      - string
                      - "null"
                  time:
                    description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
                    type:
                      - string
                      - "null"
                    format: date-time
              x-kubernetes-list-type: atomic
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
              type:
                - string
                - "null"
            namespace:
              description: |-
                Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
              type:
                - string
                - "null"
            ownerReferences:
              description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
              type:
                - array
                - "null"
              items:
                description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
                type:
                  - object
                  - "null"
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                    type:
                      - boolean
                      - "null"
                  controller:
                    description: If true, this reference points to the managing controller.
                    type:
                      - boolean
                      - "null"
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                    type: string
                x-kubernetes-map-type: atomic
              x-kubernetes-list-map-keys:
                - uid
              x-kubernetes-list-type: map
              x-kubernetes-patch-merge-key: uid
              x-kubernetes-patch-strategy: merge
            resourceVersion:
              description: |-
                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              type:
                - string
                - "null"
            selfLink:
              description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
              type:
                - string
                - "null"
            uid:
              description: |-
                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
              type:
                - string
                - "null"
        spec:
          description: Spec defines the desired state of Gateway.
          type: object
          required:
            - gatewayClassName
            - listeners
          properties:
            addresses:
              description: |+
                Addresses requested for this Gateway. This is optional and behavior can
                depend on the implementation. If a value is set in the spec and the
                requested address is invalid or unavailable, the implementation MUST
                indicate this in the associated entry in GatewayStatus.Addresses.

                The Addresses field represents a request for the address(es) on the
                "outside of the Gateway", that traffic bound for this Gateway will use.
                This could be the IP address or hostname of an external load balancer or
                other networking infrastructure, or some other address that traffic will
                be sent to.

                If no Addresses are specified, the implementation MAY schedule the
                Gateway in an implementation-specific manner, assigning an appropriate
                set of Addresses.

                The implementation MUST bind all Listeners to every GatewayAddress that
                it assigns to the Gateway and add a corresponding entry in
                GatewayStatus.Addresses.

                Support: Extended

              type:
                - array
                - "null"
              maxItems: 16
              items:
                description: GatewayAddress describes an address that can be bound to a Gateway.
                type:
                  - object
                  - "null"
                required:
                  - value
                properties:
                  type:
                    description: Type of the address.
                    type:
                      - string
                      - "null"
                    maxLength: 253
                    minLength: 1
                    pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                  value:
                    description: |-
                      Value of the address. The validity of the values will depend
                      on the type and support by the controller.

                      Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                    type: string
                    maxLength: 253
                    minLength: 1
                x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""): true'
              x-kubernetes-validations:
                - message: IPAddress values must be unique
                  rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2, a2.type == a1.type && a2.value == a1.value) : true )'
                - message: Hostname values must be unique
                  rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2, a2.type == a1.type && a2.value == a1.value) : true )'
            gatewayClassName:
              description: |-
                GatewayClassName used for this Gateway. This is the name of a
                GatewayClass resource.
              type: string
              maxLength: 253
              minLength: 1
            infrastructure:
              description: |-
                Infrastructure defines infrastructure level attributes about this Gateway instance.

                Support: Extended
              type:
                - object
                - "null"
              properties:
                annotations:
                  description: |-
                    Annotations that SHOULD be applied to any resources created in response to this Gateway.

                    For implementations creating other Kubernetes objects, this should be the `metadata.annotations` field on resources.
                    For other implementations, this refers to any relevant (implementation specific) "annotations" concepts.

                    An implementation may chose to add additional implementation-specific annotations as they see fit.

                    Support: Extended
                  type:
                    - object
                    - "null"
                  maxProperties: 8
                  additionalProperties:
                    description: |-
                      AnnotationValue is the value of an annotation in Gateway API. This is used
                      for validation of maps such as TLS options. This roughly matches Kubernetes
                      annotation validation, although the length validation in that case is based
                      on the entire size of the annotations struct.
                    type:
                      - string
                      - "null"
                    maxLength: 4096
                    minLength: 0
                  x-kubernetes-validations:
                    - message: Annotation keys must be in the form of an optional DNS subdomain prefix followed by a required name segment of up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the annotation key's prefix must be a DNS subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                labels:
                  description: |-
                    Labels that SHOULD be applied to any resources created in response to this Gateway.

                    For implementations creating other Kubernetes objects, this should be the `metadata.labels` field on resources.
                    For other implementations, this refers to any relevant (implementation specific) "labels" concepts.

                    An implementation may chose to add additional implementation-specific labels as they see fit.

                    If an implementation maps these labels to Pods, or any other resource that would need to be recreated when labels
                    change, it SHOULD clearly warn about this behavior in documentation.

                    Support: Extended
                  type:
                    - object
                    - "null"
                  maxProperties: 8
                  additionalProperties:
                    description: |-
                      LabelValue is the value of a label in the Gateway API. This is used for validation
                      of maps such as Gateway infrastructure labels. This matches the Kubernetes
                      label validation rules:
                      * must be 63 characters or less (can be empty),
                      * unless empty, must begin and end with an alphanumeric character ([a-z0-9A-Z]),
                      * could contain dashes (-), underscores (_), dots (.), and alphanumerics between.

                      Valid values include:

                      * MyValue
                      * my.name
                      * 123-my-value
                    type:
                      - string
                      - "null"
                    maxLength: 63
                    minLength: 0
                    pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                  x-kubernetes-validations:
                    - message: Label keys must be in the form of an optional DNS subdomain prefix followed by a required name segment of up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the label key's prefix must be a DNS subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                parametersRef:
                  description: |-
                    ParametersRef is a reference to a resource that contains the configuration
                    parameters corresponding to the Gateway. This is optional if the
                    controller does not require any additional configuration.

                    This follows the same semantics as GatewayClass's `parametersRef`, but on a per-Gateway basis

                    The Gateway's GatewayClass may provide its own `parametersRef`. When both are specified,
                    the merging behavior is implementation specific.
                    It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                    Support: Implementation-specific
                  type:
                    - object
                    - "null"
                  required:
                    - group
                    - kind
                    - name
                  properties:
                    group:
                      description: Group is the group of the referent.
                      type: string
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    kind:
                      description: Kind is kind of the referent.
                      type: string
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    name:
                      description: Name is the name of the referent.
                      type: string
                      maxLength: 253
                      minLength: 1
            listeners:
              description: |-
                Listeners associated with this Gateway. Listeners define
                logical endpoints that are bound on this Gateway's addresses.
                At least one Listener MUST be specified.

                Each Listener in a set of Listeners (for example, in a single Gateway)
                MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                exactly one listener. (This section uses "set of Listeners" rather than
                "Listeners in a single Gateway" because implementations MAY merge configuration
                from multiple Gateways onto a single data plane, and these rules _also_
                apply in that case).

                Practically, this means that each listener in a set MUST have a unique
                combination of Port, Protocol, and, if supported by the protocol, Hostname.

                Some combinations of port, protocol, and TLS settings are considered
                Core support and MUST be supported by implementations based on their
                targeted conformance profile:

                HTTP Profile

                1. HTTPRoute, Port: 80, Protocol: HTTP
                2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided

                TLS Profile

                1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough

                "Distinct" Listeners have the following property:

                The implementation can match inbound requests to a single distinct
                Listener. When multiple Listeners share values for fields (for
                example, two Listeners with the same Port value), the implementation
                can match requests to only one of the Listeners using other
                Listener fields.

                For example, the following Listener scenarios are distinct:

                1. Multiple Listeners with the same Port that all use the "HTTP"
                   Protocol that all have unique Hostname values.
                2. Multiple Listeners with the same Port that use either the "HTTPS" or
                   "TLS" Protocol that all have unique Hostname values.
                3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                   with the same Protocol has the same Port value.

                Some fields in the Listener struct have possible values that affect
                whether the Listener is distinct. Hostname is particularly relevant
                for HTTP or HTTPS protocols.

                When using the Hostname value to select between same-Port, same-Protocol
                Listeners, the Hostname value must be different on each Listener for the
                Listener to be distinct.

                When the Listeners are distinct based on Hostname, inbound request
                hostnames MUST match from the most specific to least specific Hostname
                values to choose the correct Listener and its associated set of Routes.

                Exact matches must be processed before wildcard matches, and wildcard
                matches must be processed before fallback (empty Hostname value)
                matches. For example, `"foo.example.com"` takes precedence over
                `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.

                Additionally, if there are multiple wildcard entries, more specific
                wildcard entries must be processed before less specific wildcard entries.
                For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                The precise definition here is that the higher the number of dots in the
                hostname to the right of the wildcard character, the higher the precedence.

                The wildcard character will match any number of characters _and dots_ to
                the left, however, so `"*.example.com"` will match both
                `"foo.bar.example.com"` _and_ `"bar.example.com"`.

                If a set of Listeners contains Listeners that are not distinct, then those
                Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                condition in the Listener Status to "True".

                Implementations MAY choose to accept a Gateway with some Conflicted
                Listeners only if they only accept the partial Listener set that contains
                no Conflicted Listeners. To put this another way, implementations may
                accept a partial Listener set only if they throw out *all* the conflicting
                Listeners. No picking one of the conflicting listeners as the winner.
                This also means that the Gateway must have at least one non-conflicting
                Listener in this case, otherwise it violates the requirement that at
                least one Listener must be present.

                The implementation MUST set a "ListenersNotValid" condition on the
                Gateway Status when the Gateway contains Conflicted Listeners whether or
                not they accept the Gateway. That Condition SHOULD clearly
                indicate in the Message which Listeners are conflicted, and which are
                Accepted. Additionally, the Listener status for those listeners SHOULD
                indicate which Listeners are conflicted and not Accepted.

                A Gateway's Listeners are considered "compatible" if:

                1. They are distinct.
                2. The implementation can serve them in compliance with the Addresses
                   requirement that all Listeners are available on all assigned
                   addresses.

                Compatible combinations in Extended support are expected to vary across
                implementations. A combination that is compatible for one implementation
                may not be compatible for another.

                For example, an implementation that cannot serve both TCP and UDP listeners
                on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                would not consider those cases compatible, even though they are distinct.

                Note that requests SHOULD match at most one Listener. For example, if
                Listeners are defined for "foo.example.com" and "*.example.com", a
                request to "foo.example.com" SHOULD only be routed using routes attached
                to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                This concept is known as "Listener Isolation". Implementations that do
                not support Listener Isolation MUST clearly document this.

                Implementations MAY merge separate Gateways onto a single set of
                Addresses if all Listeners across all Gateways are compatible.

                Support: Core
              type: array
              maxItems: 64
              minItems: 1
              items:
                description: |-
                  Listener embodies the concept of a logical endpoint where a Gateway accepts
                  network connections.
                type:
                  - object
                  - "null"
                required:
                  - name
                  - port
                  - protocol
                properties:
                  allowedRoutes:
                    description: |-
                      AllowedRoutes defines the types of routes that MAY be attached to a
                      Listener and the trusted namespaces where those Route resources MAY be
                      present.

                      Although a client request may match multiple route rules, only one rule
                      may ultimately receive the request. Matching precedence MUST be
                      determined in order of the following criteria:

                      * The most specific match as defined by the Route type.
                      * The oldest Route based on creation timestamp. For example, a Route with
                        a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                        a Route with a creation timestamp of "2020-09-08 01:02:04".
                      * If everything else is equivalent, the Route appearing first in
                        alphabetical order (namespace/name) should be given precedence. For
                        example, foo/bar is given precedence over foo/baz.

                      All valid rules within a Route attached to this Listener should be
                      implemented. Invalid Route rules can be ignored (sometimes that will mean
                      the full Route). If a Route rule transitions from valid to invalid,
                      support for that Route rule should be dropped to ensure consistency. For
                      example, even if a filter specified by a Route rule is invalid, the rest
                      of the rules within that Route should still be supported.

                      Support: Core
                    type:
                      - object
                      - "null"
                    properties:
                      kinds:
                        description: |-
                          Kinds specifies the groups and kinds of Routes that are allowed to bind
                          to this Gateway Listener. When unspecified or empty, the kinds of Routes
                          selected are determined using the Listener protocol.

                          A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                          with the application protocol specified in the Listener's Protocol field.
                          If an implementation does not support or recognize this resource type, it
                          MUST set the "ResolvedRefs" condition to False for this Listener with the
                          "InvalidRouteKinds" reason.

                          Support: Core
                        type:
                          - array
                          - "null"
                        maxItems: 8
                        items:
                          description: RouteGroupKind indicates the group and kind of a Route resource.
                          type:
                            - object
                            - "null"
                          required:
                            - kind
                          properties:
                            group:
                              description: Group is the group of the Route.
                              type:
                                - string
                                - "null"
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            kind:
                              description: Kind is the kind of the Route.
                              type: string
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      namespaces:
                        description: |-
                          Namespaces indicates namespaces from which Routes may be attached to this
                          Listener. This is restricted to the namespace of this Gateway by default.

                          Support: Core
                        type:
                          - object
                          - "null"
                        properties:
                          from:
                            description: |-
                              From indicates where Routes will be selected for this Gateway. Possible
                              values are:

                              * All: Routes in all namespaces may be used by this Gateway.
                              * Selector: Routes in namespaces selected by the selector may be used by
                                this Gateway.
                              * Same: Only Routes in the same namespace may be used by this Gateway.

                              Support: Core
                            type:
                              - string
                              - "null"
                            enum:
                              - All
                              - Selector
                              - Same
                          selector:
                            description: |-
                              Selector must be specified when From is set to "Selector". In that case,
                              only Routes in Namespaces matching this Selector will be selected by this
                              Gateway. This field is ignored for other values of "From".

                              Support: Core
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type:
                                  - object
                                  - "null"
                                additionalProperties:
                                  type:
                                    - string
                                    - "null"
                            x-kubernetes-map-type: atomic
                  hostname:
                    description: |-
                      Hostname specifies the virtual hostname to match for protocol types that
                      define this concept. When unspecified, all hostnames are matched. This
                      field is ignored for protocols that don't require hostname based
                      matching.

                      Implementations MUST apply Hostname matching appropriately for each of
                      the following protocols:

                      * TLS: The Listener Hostname MUST match the SNI.
                      * HTTP: The Listener Hostname MUST match the Host header of the request.
                      * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                        protocol layers as described above. If an implementation does not
                        ensure that both the SNI and Host header match the Listener hostname,
                        it MUST clearly document that.

                      For HTTPRoute and TLSRoute resources, there is an interaction with the
                      `spec.hostnames` array. When both listener and route specify hostnames,
                      there MUST be an intersection between the values for a Route to be
                      accepted. For more information, refer to the Route specific Hostnames
                      documentation.

                      Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                      as a suffix match. That means that a match for `*.example.com` would match
                      both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                      Support: Core
                    type:
                      - string
                      - "null"
                    maxLength: 253
                    minLength: 1
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  name:
                    description: |-
                      Name is the name of the Listener. This name MUST be unique within a
                      Gateway.

                      Support: Core
                    type: string
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  port:
                    description: |-
                      Port is the network port. Multiple listeners may use the
                      same port, subject to the Listener compatibility rules.

                      Support: Core
                    type: integer
                    format: int32
                    maximum: 65535
                    minimum: 1
                  protocol:
                    description: |-
                      Protocol specifies the network protocol this listener expects to receive.

                      Support: Core
                    type: string
                    maxLength: 255
                    minLength: 1
                    pattern: ^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                  tls:
                    description: |-
                      TLS is the TLS configuration for the Listener. This field is required if
                      the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                      if the Protocol field is "HTTP", "TCP", or "UDP".

                      The association of SNIs to Certificate defined in GatewayTLSConfig is
                      defined based on the Hostname field for this listener.

                      The GatewayClass MUST use the longest matching SNI out of all
                      available certificates for any TLS handshake.

                      Support: Core
                    type:
                      - object
                      - "null"
                    properties:
                      certificateRefs:
                        description: |-
                          CertificateRefs contains a series of references to Kubernetes objects that
                          contains TLS certificates and private keys. These certificates are used to
                          establish a TLS handshake for requests that match the hostname of the
                          associated listener.

                          A single CertificateRef to a Kubernetes Secret has "Core" support.
                          Implementations MAY choose to support attaching multiple certificates to
                          a Listener, but this behavior is implementation-specific.

                          References to a resource in different namespace are invalid UNLESS there
                          is a ReferenceGrant in the target namespace that allows the certificate
                          to be attached. If a ReferenceGrant does not allow this reference, the
                          "ResolvedRefs" condition MUST be set to False for this listener with the
                          "RefNotPermitted" reason.

                          This field is required to have at least one element when the mode is set
                          to "Terminate" (default) and is optional otherwise.

                          CertificateRefs can reference to standard Kubernetes resources, i.e.
                          Secret, or implementation-specific custom resources.

                          Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls

                          Support: Implementation-specific (More than one reference or other resource types)
                        type:
                          - array
                          - "null"
                        maxItems: 64
                        items:
                          description: |-
                            SecretObjectReference identifies an API object including its namespace,
                            defaulting to Secret.

                            The API object must be valid in the cluster; the Group and Kind must
                            be registered in the cluster for this reference to be valid.

                            References to objects with invalid Group and Kind are not valid, and must
                            be rejected by the implementation, with appropriate Conditions set
                            on the containing object.
                          type:
                            - object
                            - "null"
                          required:
                            - name
                          properties:
                            group:
                              description: |-
                                Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                When unspecified or empty string, core API group is inferred.
                              type:
                                - string
                                - "null"
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            kind:
                              description: Kind is kind of the referent. For example "Secret".
                              type:
                                - string
                                - "null"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            name:
                              description: Name is the name of the referent.
                              type: string
                              maxLength: 253
                              minLength: 1
                            namespace:
                              description: |-
                                Namespace is the namespace of the referenced object. When unspecified, the local
                                namespace is inferred.

                                Note that when a namespace different than the local namespace is specified,
                                a ReferenceGrant object is required in the referent namespace to allow that
                                namespace's owner to accept the reference. See the ReferenceGrant
                                documentation for details.

                                Support: Core
                              type:
                                - string
                                - "null"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      mode:
                        description: |-
                          Mode defines the TLS behavior for the TLS session initiated by the client.
                          There are two possible modes:

                          - Terminate: The TLS session between the downstream client and the
                            Gateway is terminated at the Gateway. This mode requires certificates
                            to be specified in some way, such as populating the certificateRefs
                            field.
                          - Passthrough: The TLS session is NOT terminated by the Gateway. This
                            implies that the Gateway can't decipher the TLS stream except for
                            the ClientHello message of the TLS protocol. The certificateRefs field
                            is ignored in this mode.

                          Support: Core
                        type:
                          - string
                          - "null"
                        enum:
                          - Terminate
                          - Passthrough
                      options:
                        description: |-
                          Options are a list of key/value pairs to enable extended TLS
                          configuration for each implementation. For example, configuring the
                          minimum TLS version or supported cipher suites.

                          A set of common keys MAY be defined by the API in the future. To avoid
                          any ambiguity, implementation-specific definitions MUST use
                          domain-prefixed names, such as `example.com/my-custom-option`.
                          Un-prefixed names are reserved for key names defined by Gateway API.

                          Support: Implementation-specific
                        type:
                          - object
                          - "null"
                        maxProperties: 16
                        additionalProperties:
                          description: |-
                            AnnotationValue is the value of an annotation in Gateway API. This is used
                            for validation of maps such as TLS options. This roughly matches Kubernetes
                            annotation validation, although the length validation in that case is based
                            on the entire size of the annotations struct.
                          type:
                            - string
                            - "null"
                          maxLength: 4096
                          minLength: 0
                    x-kubernetes-validations:
                      - message: certificateRefs or options must be specified when mode is Terminate
                        rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs) > 0 || size(self.options) > 0 : true'
              x-kubernetes-list-map-keys:
                - name
              x-kubernetes-list-type: map
              x-kubernetes-validations:
                - message: tls must not be specified for protocols ['HTTP', 'TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'', ''UDP''] ? !has(l.tls) : true)'
                - message: tls mode must be Terminate for protocol HTTPS
                  rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls)) ? (l.tls.mode == '''' || l.tls.mode == ''Terminate'') : true)'
                - message: hostname must not be specified for protocols ['TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ? (!has(l.hostname) || l.hostname == '''') : true)'
                - message: Listener name must be unique within the Gateway
                  rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                - message: Combination of port, protocol and hostname must be unique for each listener
                  rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))'
        status:
          description: Status defines the current state of Gateway.
          type:
            - object
            - "null"
          properties:
            addresses:
              description: |+
                Addresses lists the network addresses that have been bound to the
                Gateway.

                This list may differ from the addresses provided in the spec under some
                conditions:

                  * no addresses are specified, all addresses are dynamically assigned
                  * a combination of specified and dynamic addresses are assigned
                  * a specified address was unusable (e.g. already in use)

              type:
                - array
                - "null"
              maxItems: 16
              items:
                description: GatewayStatusAddress describes a network address that is bound to a Gateway.
                type:
                  - object
                  - "null"
                required:
                  - value
                properties:
                  type:
                    description: Type of the address.
                    type:
                      - string
                      - "null"
                    maxLength: 253
                    minLength: 1
                    pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                  value:
                    description: |-
                      Value of the address. The validity of the values will depend
                      on the type and support by the controller.

                      Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                    type: string
                    maxLength: 253
                    minLength: 1
                x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""): true'
            conditions:
              description: |-
                Conditions describe the current conditions of the Gateway.

                Implementations should prefer to express Gateway conditions
                using the `GatewayConditionType` and `GatewayConditionReason`
                constants so that operators and tools can converge on a common
                vocabulary to describe Gateway state.

                Known condition types are:

                * "Accepted"
                * "Programmed"
                * "Ready"
              type:
                - array
                - "null"
              maxItems: 8
              items:
                description: Condition contains details for one aspect of the current state of this API Resource.
                type:
                  - object
                  - "null"
                required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                properties:
                  lastTransitionTime:
                    description: |-
                      lastTransitionTime is the last time the condition transitioned from one status to another.
                      This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: |-
                      message is a human readable message indicating details about the transition.
                      This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: |-
                      observedGeneration represents the .metadata.generation that the condition was set based upon.
                      For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                      with respect to the current state of the instance.
                    type:
                      - integer
                      - "null"
                    format: int64
                    minimum: 0
                  reason:
                    description: |-
                      reason contains a programmatic identifier indicating the reason for the condition's last transition.
                      Producers of specific condition types may define expected values and meanings for this field,
                      and whether the values are considered a guaranteed API.
                      The value should be a CamelCase string.
                      This field may not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                      - "True"
                      - "False"
                      - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              x-kubernetes-list-map-keys:
                - type
              x-kubernetes-list-type: map
            listeners:
              description: Listeners provide status for each unique listener port defined in the Spec.
              type:
                - array
                - "null"
              maxItems: 64
              items:
                description: ListenerStatus is the status associated with a Listener.
                type:
                  - object
                  - "null"
                required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                properties:
                  attachedRoutes:
                    description: |-
                      AttachedRoutes represents the total number of Routes that have been
                      successfully attached to this Listener.

                      Successful attachment of a Route to a Listener is based solely on the
                      combination of the AllowedRoutes field on the corresponding Listener
                      and the Route's ParentRefs field. A Route is successfully attached to
                      a Listener when it is selected by the Listener's AllowedRoutes field
                      AND the Route has a valid ParentRef selecting the whole Gateway
                      resource or a specific Listener as a parent resource (more detail on
                      attachment semantics can be found in the documentation on the various
                      Route kinds ParentRefs fields). Listener or Route status does not impact
                      successful attachment, i.e. the AttachedRoutes field count MUST be set
                      for Listeners with condition Accepted: false and MUST count successfully
                      attached Routes that may themselves have Accepted: false conditions.

                      Uses for this field include troubleshooting Route attachment and
                      measuring blast radius/impact of changes to a Listener.
                    type: integer
                    format: int32
                  conditions:
                    description: Conditions describe the current condition of this listener.
                    type: array
                    maxItems: 8
                    items:
                      description: Condition contains details for one aspect of the current state of this API Resource.
                      type:
                        - object
                        - "null"
                      required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          type: string
                          format: date-time
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          type: string
                          maxLength: 32768
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          type:
                            - integer
                            - "null"
                          format: int64
                          minimum: 0
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          type: string
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          type: string
                          enum:
                            - "True"
                            - "False"
                            - Unknown
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          type: string
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    x-kubernetes-list-map-keys:
                      - type
                    x-kubernetes-list-type: map
                  name:
                    description: Name is the name of the Listener that this status corresponds to.
                    type: string
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  supportedKinds:
                    description: |-
                      SupportedKinds is the list indicating the Kinds supported by this
                      listener. This MUST represent the kinds an implementation supports for
                      that Listener configuration.

                      If kinds are specified in Spec that are not supported, they MUST NOT
                      appear in this list and an implementation MUST set the "ResolvedRefs"
                      condition to "False" with the "InvalidRouteKinds" reason. If both valid
                      and invalid Route kinds are specified, the implementation MUST
                      reference the valid Route kinds that have been specified.
                    type: array
                    maxItems: 8
                    items:
                      description: RouteGroupKind indicates the group and kind of a Route resource.
                      type:
                        - object
                        - "null"
                      required:
                        - kind
                      properties:
                        group:
                          description: Group is the group of the Route.
                          type:
                            - string
                            - "null"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        kind:
                          description: Kind is the kind of the Route.
                          type: string
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
              x-kubernetes-list-map-keys:
                - name
              x-kubernetes-list-type: map
      x-kubernetes-group-version-kind:
        - group: gateway.networking.k8s.io
          kind: Gateway
          version: v1beta1
  kind:
    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
    type:
      - string
      - "null"
    enum:
      - GatewayList
  metadata:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    type:
      - object
      - "null"
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type:
          - string
          - "null"
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type:
          - integer
          - "null"
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type:
          - string
          - "null"
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type:
          - string
          - "null"
x-kubernetes-group-version-kind:
  - group: gateway.networking.k8s.io
    kind: GatewayList
    version: v1beta1
$schema: http://json-schema.org/schema#
