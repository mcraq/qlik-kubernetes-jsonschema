description: EngineVariantList is a list of EngineVariant
type: object
required:
  - items
properties:
  apiVersion:
    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
    type:
      - string
      - "null"
    enum:
      - qixengine.qlik.com/v1
  items:
    description: 'List of enginevariants. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
    type:
      - array
      - "null"
    items:
      description: EngineVariant is the Schema for the enginevariants API
      type:
        - object
        - "null"
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type:
            - string
            - "null"
          enum:
            - qixengine.qlik.com/v1
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type:
            - string
            - "null"
          enum:
            - EngineVariant
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
          type:
            - object
            - "null"
          properties:
            annotations:
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations'
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            creationTimestamp:
              description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
              type:
                - string
                - "null"
              format: date-time
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
              type:
                - integer
                - "null"
              format: int64
            deletionTimestamp:
              description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
              type:
                - string
                - "null"
              format: date-time
            finalizers:
              description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              x-kubernetes-list-type: set
              x-kubernetes-patch-strategy: merge
            generateName:
              description: |-
                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                If this field is specified and the generated name exists, the server will return a 409.

                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
              type:
                - string
                - "null"
            generation:
              description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
              type:
                - integer
                - "null"
              format: int64
            labels:
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels'
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
              type:
                - array
                - "null"
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
                type:
                  - object
                  - "null"
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
                    type:
                      - string
                      - "null"
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
                    type:
                      - string
                      - "null"
                  fieldsV1:
                    description: |-
                      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

                      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

                      The exact format is defined in sigs.k8s.io/structured-merge-diff
                    type:
                      - object
                      - "null"
                  manager:
                    description: Manager is an identifier of the workflow managing these fields.
                    type:
                      - string
                      - "null"
                  operation:
                    description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
                    type:
                      - string
                      - "null"
                  subresource:
                    description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
                    type:
                      - string
                      - "null"
                  time:
                    description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
                    type:
                      - string
                      - "null"
                    format: date-time
              x-kubernetes-list-type: atomic
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
              type:
                - string
                - "null"
            namespace:
              description: |-
                Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
              type:
                - string
                - "null"
            ownerReferences:
              description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
              type:
                - array
                - "null"
              items:
                description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
                type:
                  - object
                  - "null"
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                    type:
                      - boolean
                      - "null"
                  controller:
                    description: If true, this reference points to the managing controller.
                    type:
                      - boolean
                      - "null"
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                    type: string
                x-kubernetes-map-type: atomic
              x-kubernetes-list-map-keys:
                - uid
              x-kubernetes-list-type: map
              x-kubernetes-patch-merge-key: uid
              x-kubernetes-patch-strategy: merge
            resourceVersion:
              description: |-
                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              type:
                - string
                - "null"
            selfLink:
              description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
              type:
                - string
                - "null"
            uid:
              description: |-
                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
              type:
                - string
                - "null"
        spec:
          description: EngineVariantSpec defines the desired state of EngineVariant
          type:
            - object
            - "null"
          required:
            - engineTemplateName
            - image
          properties:
            affinity:
              description: Affinity is a group of affinity scheduling rules.
              type:
                - object
                - "null"
              properties:
                nodeAffinity:
                  description: Describes node affinity scheduling rules for the pod.
                  type:
                    - object
                    - "null"
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        The scheduler will prefer to schedule pods to nodes that satisfy
                        the affinity expressions specified by this field, but it may choose
                        a node that violates one or more of the expressions. The node that is
                        most preferred is the one with the greatest sum of weights, i.e.
                        for each node that meets all of the scheduling requirements (resource
                        request, requiredDuringScheduling affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field and adding
                        "weight" to the sum if the node matches the corresponding matchExpressions; the
                        node(s) with the highest sum are the most preferred.
                      type:
                        - array
                        - "null"
                      items:
                        description: |-
                          An empty preferred scheduling term matches all objects with implicit weight 0
                          (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                        type:
                          - object
                          - "null"
                        required:
                          - preference
                          - weight
                        properties:
                          preference:
                            description: A node selector term, associated with the corresponding weight.
                            type: object
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements by node's labels.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A node selector requirement is a selector that contains values, a key, and an operator
                                    that relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: The label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        Represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: |-
                                        An array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will be interpreted as an integer.
                                        This array is replaced during a strategic merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchFields:
                                description: A list of node selector requirements by node's fields.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A node selector requirement is a selector that contains values, a key, and an operator
                                    that relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: The label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        Represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: |-
                                        An array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will be interpreted as an integer.
                                        This array is replaced during a strategic merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                            x-kubernetes-map-type: atomic
                          weight:
                            description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                            type: integer
                            format: int32
                      x-kubernetes-list-type: atomic
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        If the affinity requirements specified by this field are not met at
                        scheduling time, the pod will not be scheduled onto the node.
                        If the affinity requirements specified by this field cease to be met
                        at some point during pod execution (e.g. due to an update), the system
                        may or may not try to eventually evict the pod from its node.
                      type:
                        - object
                        - "null"
                      required:
                        - nodeSelectorTerms
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The terms are ORed.
                          type: array
                          items:
                            description: |-
                              A null or empty node selector term matches no objects. The requirements of
                              them are ANDed.
                              The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements by node's labels.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A node selector requirement is a selector that contains values, a key, and an operator
                                    that relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: The label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        Represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: |-
                                        An array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will be interpreted as an integer.
                                        This array is replaced during a strategic merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchFields:
                                description: A list of node selector requirements by node's fields.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A node selector requirement is a selector that contains values, a key, and an operator
                                    that relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: The label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        Represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: |-
                                        An array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will be interpreted as an integer.
                                        This array is replaced during a strategic merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                            x-kubernetes-map-type: atomic
                          x-kubernetes-list-type: atomic
                      x-kubernetes-map-type: atomic
                podAffinity:
                  description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                  type:
                    - object
                    - "null"
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        The scheduler will prefer to schedule pods to nodes that satisfy
                        the affinity expressions specified by this field, but it may choose
                        a node that violates one or more of the expressions. The node that is
                        most preferred is the one with the greatest sum of weights, i.e.
                        for each node that meets all of the scheduling requirements (resource
                        request, requiredDuringScheduling affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field and adding
                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                        node(s) with the highest sum are the most preferred.
                      type:
                        - array
                        - "null"
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                        type:
                          - object
                          - "null"
                        required:
                          - podAffinityTerm
                          - weight
                        properties:
                          podAffinityTerm:
                            description: Required. A pod affinity term, associated with the corresponding weight.
                            type: object
                            required:
                              - topologyKey
                            properties:
                              labelSelector:
                                description: |-
                                  A label query over a set of resources, in this case pods.
                                  If it's null, this PodAffinityTerm matches with no Pods.
                                type:
                                  - object
                                  - "null"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type:
                                        - object
                                        - "null"
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type:
                                            - array
                                            - "null"
                                          items:
                                            type:
                                              - string
                                              - "null"
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type:
                                      - object
                                      - "null"
                                    additionalProperties:
                                      type:
                                        - string
                                        - "null"
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                  This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              mismatchLabelKeys:
                                description: |-
                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                  This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              namespaceSelector:
                                description: |-
                                  A label query over the set of namespaces that the term applies to.
                                  The term is applied to the union of the namespaces selected by this field
                                  and the ones listed in the namespaces field.
                                  null selector and null or empty namespaces list means "this pod's namespace".
                                  An empty selector ({}) matches all namespaces.
                                type:
                                  - object
                                  - "null"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type:
                                        - object
                                        - "null"
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type:
                                            - array
                                            - "null"
                                          items:
                                            type:
                                              - string
                                              - "null"
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type:
                                      - object
                                      - "null"
                                    additionalProperties:
                                      type:
                                        - string
                                        - "null"
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: |-
                                  namespaces specifies a static list of namespace names that the term applies to.
                                  The term is applied to the union of the namespaces listed in this field
                                  and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              topologyKey:
                                description: |-
                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                  selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                          weight:
                            description: |-
                              weight associated with matching the corresponding podAffinityTerm,
                              in the range 1-100.
                            type: integer
                            format: int32
                      x-kubernetes-list-type: atomic
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        If the affinity requirements specified by this field are not met at
                        scheduling time, the pod will not be scheduled onto the node.
                        If the affinity requirements specified by this field cease to be met
                        at some point during pod execution (e.g. due to a pod label update), the
                        system may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding to each
                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                      type:
                        - array
                        - "null"
                      items:
                        description: |-
                          Defines a set of pods (namely those matching the labelSelector
                          relative to the given namespace(s)) that this pod should be
                          co-located (affinity) or not co-located (anti-affinity) with,
                          where co-located is defined as running on a node whose value of
                          the label with key <topologyKey> matches that of any node on which
                          a pod of the set of pods is running
                        type:
                          - object
                          - "null"
                        required:
                          - topologyKey
                        properties:
                          labelSelector:
                            description: |-
                              A label query over a set of resources, in this case pods.
                              If it's null, this PodAffinityTerm matches with no Pods.
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type:
                                  - object
                                  - "null"
                                additionalProperties:
                                  type:
                                    - string
                                    - "null"
                            x-kubernetes-map-type: atomic
                          matchLabelKeys:
                            description: |-
                              MatchLabelKeys is a set of pod label keys to select which pods will
                              be taken into consideration. The keys are used to lookup values from the
                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                              to select the group of existing pods which pods will be taken into consideration
                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                              pod labels will be ignored. The default value is empty.
                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          mismatchLabelKeys:
                            description: |-
                              MismatchLabelKeys is a set of pod label keys to select which pods will
                              be taken into consideration. The keys are used to lookup values from the
                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                              to select the group of existing pods which pods will be taken into consideration
                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                              pod labels will be ignored. The default value is empty.
                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          namespaceSelector:
                            description: |-
                              A label query over the set of namespaces that the term applies to.
                              The term is applied to the union of the namespaces selected by this field
                              and the ones listed in the namespaces field.
                              null selector and null or empty namespaces list means "this pod's namespace".
                              An empty selector ({}) matches all namespaces.
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type:
                                  - object
                                  - "null"
                                additionalProperties:
                                  type:
                                    - string
                                    - "null"
                            x-kubernetes-map-type: atomic
                          namespaces:
                            description: |-
                              namespaces specifies a static list of namespace names that the term applies to.
                              The term is applied to the union of the namespaces listed in this field
                              and the ones selected by namespaceSelector.
                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          topologyKey:
                            description: |-
                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                              whose value of the label with key topologyKey matches that of any node on which any of the
                              selected pods is running.
                              Empty topologyKey is not allowed.
                            type: string
                      x-kubernetes-list-type: atomic
                podAntiAffinity:
                  description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                  type:
                    - object
                    - "null"
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        The scheduler will prefer to schedule pods to nodes that satisfy
                        the anti-affinity expressions specified by this field, but it may choose
                        a node that violates one or more of the expressions. The node that is
                        most preferred is the one with the greatest sum of weights, i.e.
                        for each node that meets all of the scheduling requirements (resource
                        request, requiredDuringScheduling anti-affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field and adding
                        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                        node(s) with the highest sum are the most preferred.
                      type:
                        - array
                        - "null"
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                        type:
                          - object
                          - "null"
                        required:
                          - podAffinityTerm
                          - weight
                        properties:
                          podAffinityTerm:
                            description: Required. A pod affinity term, associated with the corresponding weight.
                            type: object
                            required:
                              - topologyKey
                            properties:
                              labelSelector:
                                description: |-
                                  A label query over a set of resources, in this case pods.
                                  If it's null, this PodAffinityTerm matches with no Pods.
                                type:
                                  - object
                                  - "null"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type:
                                        - object
                                        - "null"
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type:
                                            - array
                                            - "null"
                                          items:
                                            type:
                                              - string
                                              - "null"
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type:
                                      - object
                                      - "null"
                                    additionalProperties:
                                      type:
                                        - string
                                        - "null"
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                  This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              mismatchLabelKeys:
                                description: |-
                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                  This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              namespaceSelector:
                                description: |-
                                  A label query over the set of namespaces that the term applies to.
                                  The term is applied to the union of the namespaces selected by this field
                                  and the ones listed in the namespaces field.
                                  null selector and null or empty namespaces list means "this pod's namespace".
                                  An empty selector ({}) matches all namespaces.
                                type:
                                  - object
                                  - "null"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type:
                                        - object
                                        - "null"
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type:
                                            - array
                                            - "null"
                                          items:
                                            type:
                                              - string
                                              - "null"
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type:
                                      - object
                                      - "null"
                                    additionalProperties:
                                      type:
                                        - string
                                        - "null"
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: |-
                                  namespaces specifies a static list of namespace names that the term applies to.
                                  The term is applied to the union of the namespaces listed in this field
                                  and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                x-kubernetes-list-type: atomic
                              topologyKey:
                                description: |-
                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                  selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                          weight:
                            description: |-
                              weight associated with matching the corresponding podAffinityTerm,
                              in the range 1-100.
                            type: integer
                            format: int32
                      x-kubernetes-list-type: atomic
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: |-
                        If the anti-affinity requirements specified by this field are not met at
                        scheduling time, the pod will not be scheduled onto the node.
                        If the anti-affinity requirements specified by this field cease to be met
                        at some point during pod execution (e.g. due to a pod label update), the
                        system may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding to each
                        podAffinityTerm are intersected, i.e. all terms must be satisfied.
                      type:
                        - array
                        - "null"
                      items:
                        description: |-
                          Defines a set of pods (namely those matching the labelSelector
                          relative to the given namespace(s)) that this pod should be
                          co-located (affinity) or not co-located (anti-affinity) with,
                          where co-located is defined as running on a node whose value of
                          the label with key <topologyKey> matches that of any node on which
                          a pod of the set of pods is running
                        type:
                          - object
                          - "null"
                        required:
                          - topologyKey
                        properties:
                          labelSelector:
                            description: |-
                              A label query over a set of resources, in this case pods.
                              If it's null, this PodAffinityTerm matches with no Pods.
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type:
                                  - object
                                  - "null"
                                additionalProperties:
                                  type:
                                    - string
                                    - "null"
                            x-kubernetes-map-type: atomic
                          matchLabelKeys:
                            description: |-
                              MatchLabelKeys is a set of pod label keys to select which pods will
                              be taken into consideration. The keys are used to lookup values from the
                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                              to select the group of existing pods which pods will be taken into consideration
                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                              pod labels will be ignored. The default value is empty.
                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          mismatchLabelKeys:
                            description: |-
                              MismatchLabelKeys is a set of pod label keys to select which pods will
                              be taken into consideration. The keys are used to lookup values from the
                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                              to select the group of existing pods which pods will be taken into consideration
                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                              pod labels will be ignored. The default value is empty.
                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                              This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          namespaceSelector:
                            description: |-
                              A label query over the set of namespaces that the term applies to.
                              The term is applied to the union of the namespaces selected by this field
                              and the ones listed in the namespaces field.
                              null selector and null or empty namespaces list means "this pod's namespace".
                              An empty selector ({}) matches all namespaces.
                            type:
                              - object
                              - "null"
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type:
                                  - array
                                  - "null"
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type:
                                    - object
                                    - "null"
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type:
                                        - array
                                        - "null"
                                      items:
                                        type:
                                          - string
                                          - "null"
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type:
                                  - object
                                  - "null"
                                additionalProperties:
                                  type:
                                    - string
                                    - "null"
                            x-kubernetes-map-type: atomic
                          namespaces:
                            description: |-
                              namespaces specifies a static list of namespace names that the term applies to.
                              The term is applied to the union of the namespaces listed in this field
                              and the ones selected by namespaceSelector.
                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                            type:
                              - array
                              - "null"
                            items:
                              type:
                                - string
                                - "null"
                            x-kubernetes-list-type: atomic
                          topologyKey:
                            description: |-
                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                              whose value of the label with key topologyKey matches that of any node on which any of the
                              selected pods is running.
                              Empty topologyKey is not allowed.
                            type: string
                      x-kubernetes-list-type: atomic
            annotations:
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            args:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
            cpu:
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            engineTemplateName:
              description: |-
                INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
                Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html
              type: string
            env:
              type:
                - array
                - "null"
              items:
                description: EnvVar represents an environment variable present in a Container.
                type:
                  - object
                  - "null"
                required:
                  - name
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: |-
                      Variable references $(VAR_NAME) are expanded
                      using the previously defined environment variables in the container and
                      any service environment variables. If a variable cannot be resolved,
                      the reference in the input string will be unchanged. Double $$ are reduced
                      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                      "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                      Escaped references will never be expanded, regardless of whether the variable
                      exists or not.
                      Defaults to "".
                    type:
                      - string
                      - "null"
                  valueFrom:
                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                    type:
                      - object
                      - "null"
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        type:
                          - object
                          - "null"
                        required:
                          - key
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                            type:
                              - string
                              - "null"
                          optional:
                            description: Specify whether the ConfigMap or its key must be defined
                            type:
                              - boolean
                              - "null"
                        x-kubernetes-map-type: atomic
                      fieldRef:
                        description: |-
                          Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                        type:
                          - object
                          - "null"
                        required:
                          - fieldPath
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                            type:
                              - string
                              - "null"
                          fieldPath:
                            description: Path of the field to select in the specified API version.
                            type: string
                        x-kubernetes-map-type: atomic
                      resourceFieldRef:
                        description: |-
                          Selects a resource of the container: only resources limits and requests
                          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                        type:
                          - object
                          - "null"
                        required:
                          - resource
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional for env vars'
                            type:
                              - string
                              - "null"
                          divisor:
                            description: Specifies the output format of the exposed resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        x-kubernetes-map-type: atomic
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        type:
                          - object
                          - "null"
                        required:
                          - key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                            type:
                              - string
                              - "null"
                          optional:
                            description: Specify whether the Secret or its key must be defined
                            type:
                              - boolean
                              - "null"
                        x-kubernetes-map-type: atomic
            image:
              type: string
            imagePullSecrets:
              type:
                - array
                - "null"
              items:
                description: |-
                  LocalObjectReference contains enough information to let you locate the
                  referenced object inside the same namespace.
                type:
                  - object
                  - "null"
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type:
                      - string
                      - "null"
                x-kubernetes-map-type: atomic
            labels:
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            memory:
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            nodeSelector:
              type:
                - object
                - "null"
              additionalProperties:
                type:
                  - string
                  - "null"
            priority:
              type:
                - integer
                - "null"
              format: int32
            priorityClassName:
              type:
                - string
                - "null"
            resources:
              description: ResourceRequirements describes the compute resource requirements.
              type:
                - object
                - "null"
              properties:
                claims:
                  description: |-
                    Claims lists the names of resources, defined in spec.resourceClaims,
                    that are used by this container.


                    This is an alpha field and requires enabling the
                    DynamicResourceAllocation feature gate.


                    This field is immutable. It can only be set for containers.
                  type:
                    - array
                    - "null"
                  items:
                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                    type:
                      - object
                      - "null"
                    required:
                      - name
                    properties:
                      name:
                        description: |-
                          Name must match the name of one entry in pod.spec.resourceClaims of
                          the Pod where this field is used. It makes that resource available
                          inside a container.
                        type: string
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                limits:
                  description: |-
                    Limits describes the maximum amount of compute resources allowed.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                requests:
                  description: |-
                    Requests describes the minimum amount of compute resources required.
                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
            securityContext:
              description: |-
                PodSecurityContext holds pod-level security attributes and common container settings.
                Some fields are also present in container.securityContext.  Field values of
                container.securityContext take precedence over field values of PodSecurityContext.
              type:
                - object
                - "null"
              properties:
                appArmorProfile:
                  description: |-
                    appArmorProfile is the AppArmor options to use by the containers in this pod.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - object
                    - "null"
                  required:
                    - type
                  properties:
                    localhostProfile:
                      description: |-
                        localhostProfile indicates a profile loaded on the node that should be used.
                        The profile must be preconfigured on the node to work.
                        Must match the loaded name of the profile.
                        Must be set if and only if type is "Localhost".
                      type:
                        - string
                        - "null"
                    type:
                      description: |-
                        type indicates which kind of AppArmor profile will be applied.
                        Valid options are:
                          Localhost - a profile pre-loaded on the node.
                          RuntimeDefault - the container runtime's default profile.
                          Unconfined - no AppArmor enforcement.
                      type: string
                fsGroup:
                  description: |-
                    A special supplemental group that applies to all containers in a pod.
                    Some volume types allow the Kubelet to change the ownership of that volume
                    to be owned by the pod:


                    1. The owning GID will be the FSGroup
                    2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                    3. The permission bits are OR'd with rw-rw----


                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - integer
                    - "null"
                  format: int64
                fsGroupChangePolicy:
                  description: |-
                    fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                    before being exposed inside Pod. This field will only apply to
                    volume types which support fsGroup based ownership(and permissions).
                    It will have no effect on ephemeral volume types such as: secret, configmaps
                    and emptydir.
                    Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - string
                    - "null"
                runAsGroup:
                  description: |-
                    The GID to run the entrypoint of the container process.
                    Uses runtime default if unset.
                    May also be set in SecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence
                    for that container.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - integer
                    - "null"
                  format: int64
                runAsNonRoot:
                  description: |-
                    Indicates that the container must run as a non-root user.
                    If true, the Kubelet will validate the image at runtime to ensure that it
                    does not run as UID 0 (root) and fail to start the container if it does.
                    If unset or false, no such validation will be performed.
                    May also be set in SecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                  type:
                    - boolean
                    - "null"
                runAsUser:
                  description: |-
                    The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified.
                    May also be set in SecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence
                    for that container.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - integer
                    - "null"
                  format: int64
                seLinuxOptions:
                  description: |-
                    The SELinux context to be applied to all containers.
                    If unspecified, the container runtime will allocate a random SELinux context for each
                    container.  May also be set in SecurityContext.  If set in
                    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - object
                    - "null"
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the container.
                      type:
                        - string
                        - "null"
                    role:
                      description: Role is a SELinux role label that applies to the container.
                      type:
                        - string
                        - "null"
                    type:
                      description: Type is a SELinux type label that applies to the container.
                      type:
                        - string
                        - "null"
                    user:
                      description: User is a SELinux user label that applies to the container.
                      type:
                        - string
                        - "null"
                seccompProfile:
                  description: |-
                    The seccomp options to use by the containers in this pod.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - object
                    - "null"
                  required:
                    - type
                  properties:
                    localhostProfile:
                      description: |-
                        localhostProfile indicates a profile defined in a file on the node should be used.
                        The profile must be preconfigured on the node to work.
                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                        Must be set if type is "Localhost". Must NOT be set for any other type.
                      type:
                        - string
                        - "null"
                    type:
                      description: |-
                        type indicates which kind of seccomp profile will be applied.
                        Valid options are:


                        Localhost - a profile defined in a file on the node should be used.
                        RuntimeDefault - the container runtime default profile should be used.
                        Unconfined - no profile should be applied.
                      type: string
                supplementalGroups:
                  description: |-
                    A list of groups applied to the first process run in each container, in addition
                    to the container's primary GID, the fsGroup (if specified), and group memberships
                    defined in the container image for the uid of the container process. If unspecified,
                    no additional groups are added to any container. Note that group memberships
                    defined in the container image for the uid of the container process are still effective,
                    even if they are not included in this list.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - integer
                      - "null"
                    format: int64
                  x-kubernetes-list-type: atomic
                sysctls:
                  description: |-
                    Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                    sysctls (by the container runtime) might fail to launch.
                    Note that this field cannot be set when spec.os.name is windows.
                  type:
                    - array
                    - "null"
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    type:
                      - object
                      - "null"
                    required:
                      - name
                      - value
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                  x-kubernetes-list-type: atomic
                windowsOptions:
                  description: |-
                    The Windows specific settings applied to all containers.
                    If unspecified, the options within a container's SecurityContext will be used.
                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                    Note that this field cannot be set when spec.os.name is linux.
                  type:
                    - object
                    - "null"
                  properties:
                    gmsaCredentialSpec:
                      description: |-
                        GMSACredentialSpec is where the GMSA admission webhook
                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                        GMSA credential spec named by the GMSACredentialSpecName field.
                      type:
                        - string
                        - "null"
                    gmsaCredentialSpecName:
                      description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                      type:
                        - string
                        - "null"
                    hostProcess:
                      description: |-
                        HostProcess determines if a container should be run as a 'Host Process' container.
                        All of a Pod's containers must have the same effective HostProcess value
                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                      type:
                        - boolean
                        - "null"
                    runAsUserName:
                      description: |-
                        The UserName in Windows to run the entrypoint of the container process.
                        Defaults to the user specified in image metadata if unspecified.
                        May also be set in PodSecurityContext. If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                      type:
                        - string
                        - "null"
            terminationGracePeriodSeconds:
              type:
                - integer
                - "null"
              format: int64
            tolerations:
              type:
                - array
                - "null"
              items:
                description: |-
                  The pod this Toleration is attached to tolerates any taint that matches
                  the triple <key,value,effect> using the matching operator <operator>.
                type:
                  - object
                  - "null"
                properties:
                  effect:
                    description: |-
                      Effect indicates the taint effect to match. Empty means match all taint effects.
                      When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                    type:
                      - string
                      - "null"
                  key:
                    description: |-
                      Key is the taint key that the toleration applies to. Empty means match all taint keys.
                      If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                    type:
                      - string
                      - "null"
                  operator:
                    description: |-
                      Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal.
                      Exists is equivalent to wildcard for value, so that a pod can
                      tolerate all taints of a particular category.
                    type:
                      - string
                      - "null"
                  tolerationSeconds:
                    description: |-
                      TolerationSeconds represents the period of time the toleration (which must be
                      of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                      it is not set, which means tolerate the taint forever (do not evict). Zero and
                      negative values will be treated as 0 (evict immediately) by the system.
                    type:
                      - integer
                      - "null"
                    format: int64
                  value:
                    description: |-
                      Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise just a regular string.
                    type:
                      - string
                      - "null"
        status:
          description: EngineVariantStatus defines the observed state of EngineVariant
          type:
            - object
            - "null"
          properties:
            lastUpdate:
              type:
                - string
                - "null"
              format: date-time
            reason:
              type:
                - string
                - "null"
            status:
              type:
                - string
                - "null"
              enum:
                - Success
                - Failure
      x-kubernetes-group-version-kind:
        - group: qixengine.qlik.com
          kind: EngineVariant
          version: v1
  kind:
    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
    type:
      - string
      - "null"
    enum:
      - EngineVariantList
  metadata:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    type:
      - object
      - "null"
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type:
          - string
          - "null"
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type:
          - integer
          - "null"
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type:
          - string
          - "null"
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type:
          - string
          - "null"
x-kubernetes-group-version-kind:
  - group: qixengine.qlik.com
    kind: EngineVariantList
    version: v1
$schema: http://json-schema.org/schema#
